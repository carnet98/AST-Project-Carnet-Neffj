void DCEMarker0_(void);
void DCEMarker1_(void);
void DCEMarker2_(void);
void DCEMarker3_(void);
void DCEMarker4_(void);
void DCEMarker5_(void);
void DCEMarker6_(void);
void DCEMarker7_(void);
void DCEMarker8_(void);
void DCEMarker9_(void);
void DCEMarker10_(void);
void DCEMarker11_(void);
void DCEMarker12_(void);
void DCEMarker13_(void);
void DCEMarker14_(void);
void DCEMarker15_(void);
void DCEMarker16_(void);
void DCEMarker17_(void);
void DCEMarker18_(void);
void DCEMarker19_(void);
void DCEMarker20_(void);
void DCEMarker21_(void);
void DCEMarker22_(void);
void DCEMarker23_(void);
void DCEMarker24_(void);
void DCEMarker25_(void);
void DCEMarker26_(void);
void DCEMarker27_(void);
void DCEMarker28_(void);
void DCEMarker29_(void);
void DCEMarker30_(void);
void DCEMarker31_(void);
void DCEMarker32_(void);
void DCEMarker33_(void);
void DCEMarker34_(void);
void DCEMarker35_(void);
void DCEMarker36_(void);
void DCEMarker37_(void);
void DCEMarker38_(void);
void DCEMarker39_(void);
void DCEMarker40_(void);
void DCEMarker41_(void);
/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   --no-unions --safe-math --no-argc --no-volatiles
 * --no-volatile-pointers --arrays --no-bitfields --checksum
 * --no-comma-operators --compound-assignment --consts --no-divs
 * --embedded-assigns --jumps --longlong --no-force-non-uniform-arrays
 * --no-math64 --no-muls --no-packed-struct --paranoid --pointers --no-structs
 * --inline-function --no-return-structs --no-arg-structs
 * --no-dangling-global-pointers Seed:      1693805737
 */

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
/* --- GLOBAL VARIABLES --- */
static int32_t g_2 = 0xC68EC0AEL;
static int32_t g_26 = (-1L);
static const int32_t g_29 = 0x780EEC29L;
static int32_t g_35[10] = {1L, 0xF4442628L, 0xA37D7C86L, 0xA37D7C86L, 0xF4442628L, 1L, 0xF4442628L, 0xA37D7C86L, 0xA37D7C86L, 0xF4442628L};
static int32_t g_37 = 0L;
static uint8_t g_47[4][1] = {{0x76L}, {0x76L}, {0x76L}, {0x76L}};
static uint32_t g_85[9] = {0x205405EAL, 0x2BFCFF14L, 0x205405EAL, 0x2BFCFF14L, 0x205405EAL, 0x2BFCFF14L, 0x205405EAL, 0x2BFCFF14L, 0x205405EAL};
static int16_t g_90[1] = {0L};
static int8_t g_102 = (-4L);
static int8_t g_104 = (-7L);
static int32_t g_107[6] = {(-1L), (-1L), (-1L), (-1L), (-1L), (-1L)};
static int8_t g_124 = 0x17L;
static uint16_t g_138 = 0xD635L;
static int16_t g_163 = 0x3165L;
static uint16_t *g_165 = &g_138;
static uint16_t **g_164 = &g_165;
static int32_t *g_182 = (void*)0;
static uint16_t **g_228 = &g_165;
static uint16_t * const **g_258 = (void*)0;
static uint16_t * const ***g_257 = &g_258;
static uint32_t *g_266[6][10] = {{&g_85[6], (void*)0, &g_85[4], (void*)0, &g_85[4], &g_85[4], (void*)0, &g_85[4], (void*)0, &g_85[6]}, {&g_85[6], (void*)0, &g_85[4], (void*)0, &g_85[4], &g_85[4], (void*)0, &g_85[4], (void*)0, &g_85[6]}, {&g_85[6], (void*)0, &g_85[4], (void*)0, &g_85[4], &g_85[4], (void*)0, &g_85[4], (void*)0, &g_85[6]}, {&g_85[6], (void*)0, &g_85[4], (void*)0, &g_85[4], &g_85[4], (void*)0, &g_85[4], (void*)0, &g_85[6]}, {&g_85[6], (void*)0, &g_85[4], (void*)0, &g_85[4], &g_85[4], (void*)0, &g_85[4], (void*)0, &g_85[6]}, {&g_85[6], (void*)0, &g_85[4], (void*)0, &g_85[4], &g_85[4], (void*)0, &g_85[4], (void*)0, &g_85[6]}};
static uint32_t **g_265[3][5][4] = {{{&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}, {&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}, {&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}, {&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}, {&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}}, {{&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}, {&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}, {&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}, {&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}, {&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}}, {{&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}, {&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}, {&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}, {&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}, {&g_266[4][9], (void*)0, &g_266[5][9], &g_266[4][9]}}};
static uint32_t g_281 = 4294967295UL;
static const int16_t g_318 = 0xABE3L;
static const int16_t g_320 = 0x1C21L;
static uint32_t g_328 = 18446744073709551612UL;
static uint16_t g_331[5][2] = {{0x921FL, 0x921FL}, {0x921FL, 0x921FL}, {0x921FL, 0x921FL}, {0x921FL, 0x921FL}, {0x921FL, 0x921FL}};
static int16_t g_354 = (-8L);
static uint32_t g_425[9][4] = {{18446744073709551615UL, 18446744073709551615UL, 18446744073709551610UL, 3UL}, {18446744073709551615UL, 18446744073709551615UL, 18446744073709551610UL, 3UL}, {18446744073709551615UL, 18446744073709551615UL, 18446744073709551610UL, 3UL}, {18446744073709551615UL, 18446744073709551615UL, 18446744073709551610UL, 3UL}, {18446744073709551615UL, 18446744073709551615UL, 18446744073709551610UL, 3UL}, {18446744073709551615UL, 18446744073709551615UL, 18446744073709551610UL, 3UL}, {18446744073709551615UL, 18446744073709551615UL, 18446744073709551610UL, 3UL}, {18446744073709551615UL, 18446744073709551615UL, 18446744073709551610UL, 3UL}, {18446744073709551615UL, 18446744073709551615UL, 18446744073709551610UL, 3UL}};
static const uint8_t *g_432[7][8] = {{&g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0]}, {&g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0]}, {&g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0]}, {&g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0]}, {&g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0]}, {&g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0]}, {&g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0], &g_47[1][0], &g_47[2][0]}};
static const uint8_t **g_431[3][10][8] = {{{&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}}, {{&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}}, {{&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}, {&g_432[1][2], &g_432[2][1], &g_432[2][1], &g_432[1][2], &g_432[6][1], &g_432[1][2], &g_432[6][1], &g_432[2][5]}}};
static const int8_t g_446 = (-2L);
static int16_t *g_454 = &g_163;
static uint16_t g_462 = 65535UL;
static int16_t g_473 = 0xDF3EL;
static int32_t g_475 = (-1L);
static int16_t **g_551 = &g_454;
static int16_t ***g_550 = &g_551;
static const uint16_t g_585 = 0x3403L;
static const uint16_t *g_584[5] = {(void*)0, &g_585, (void*)0, &g_585, (void*)0};
static const uint16_t **g_583 = &g_584[2];
static int32_t *g_666 = &g_37;
static int8_t g_701[1][7] = {{0x87L, 0x87L, 0x87L, 0x87L, 0x87L, 0x87L, 0x87L}};


/* --- FORWARD DECLARATIONS --- */
inline static int16_t  func_1(void);
static int32_t * func_5(const int32_t * p_6, int8_t  p_7, int32_t * p_8, int16_t  p_9);
static const int32_t * func_10(int8_t  p_11, int32_t  p_12, uint16_t  p_13, int32_t * p_14);
inline static int32_t * func_19(int32_t  p_20, const int32_t * p_21, int32_t * p_22, int32_t * p_23);
static int32_t * func_30(int32_t * p_31, uint8_t  p_32, int32_t  p_33);
inline static int32_t * func_39(uint16_t  p_40, int32_t  p_41, uint32_t  p_42, int32_t * p_43);
static const uint8_t  func_55(uint16_t  p_56, int32_t  p_57);
inline static int32_t  func_60(int8_t  p_61, int32_t * p_62, uint16_t  p_63);
static uint8_t  func_64(uint8_t * p_65, int32_t * p_66, uint16_t  p_67, int32_t * p_68, const int32_t * p_69);
static uint8_t * func_70(const int32_t  p_71);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_2 g_454 g_163
 * writes: g_2
 */
inline static int16_t  func_1(void)
{ /* block id: 0 */
    uint32_t l_15 = 0x87D0FA51L;
    int32_t *l_18 = &g_2;
    uint32_t l_24 = 0xB5542AFAL;
    for (g_2 = 0; (g_2 >= (-15)); g_2 = safe_sub_func_int16_t_s_s(g_2, 4)) {
      DCEMarker0_(); /* block id: 3 */
      int32_t l_17 = 0x1454BCD7L;
      int32_t *l_25 = &g_26;
      const int32_t *l_28 = &g_29;
      const int32_t **l_27 = &l_28;
      int32_t **l_632 = (void *)0;
      int32_t **l_633 = &g_182;
    }
    return (*g_454);
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes: g_666 g_182
 */
static int32_t * func_5(const int32_t * p_6, int8_t  p_7, int32_t * p_8, int16_t  p_9)
{ /* block id: 451 */
    int32_t *l_693 = (void*)0;
    int32_t **l_694 = (void*)0;
    int32_t **l_695 = &g_666;
    int32_t l_696 = 0xCA76E619L;
    int32_t *l_697 = &g_35[4];
    int32_t *l_698 = &g_107[4];
    int32_t *l_699 = (void*)0;
    int32_t *l_700[6] = {&g_37, &g_37, &g_35[4], &g_37, &g_37, &g_35[4]};
    int8_t l_702 = 0xB8L;
    int32_t l_703 = (-1L);
    uint16_t l_704[1][4];
    int i, j;
    for (i = 0; i < 1; i++) {
      DCEMarker1_();
      for (j = 0; j < 4; j++) {
        DCEMarker2_();
        l_704[i][j] = 5UL;
      }
    }
    (*l_695) = l_693;
    /* statement id: 452 */
    assert (g_666 == 0);
    --l_704[0][3];
    g_182 = (void*)0;
    /* statement id: 454 */
    assert (g_182 == 0);
    return &g_35[4];
    /* statement id: 455 */
    //assert ((func_5_rv >= &g_35[0] && func_5_rv <= &g_35[9]));
}


/* ------------------------------------------ */
/* 
 * reads : g_138 g_550 g_551 g_454 g_163 g_37 g_35 g_29 g_26 g_666 g_164 g_165 g_462
 * writes: g_138 g_35 g_666 g_26 g_37 g_163 g_462
 */
static const int32_t * func_10(int8_t  p_11, int32_t  p_12, uint16_t  p_13, int32_t * p_14)
{ /* block id: 412 */
    int32_t *l_671[8] = {&g_107[4], (void*)0, &g_107[4], (void*)0, &g_107[4], (void*)0, &g_107[4], (void*)0};
    int32_t **l_672[9][9] = {{&l_671[0], &g_182, &g_182, &g_182, &l_671[0], &g_182, (void*)0, &g_182, &g_182}, {&l_671[0], &g_182, &g_182, &g_182, &l_671[0], &g_182, (void*)0, &g_182, &g_182}, {&l_671[0], &g_182, &g_182, &g_182, &l_671[0], &g_182, (void*)0, &g_182, &g_182}, {&l_671[0], &g_182, &g_182, &g_182, &l_671[0], &g_182, (void*)0, &g_182, &g_182}, {&l_671[0], &g_182, &g_182, &g_182, &l_671[0], &g_182, (void*)0, &g_182, &g_182}, {&l_671[0], &g_182, &g_182, &g_182, &l_671[0], &g_182, (void*)0, &g_182, &g_182}, {&l_671[0], &g_182, &g_182, &g_182, &l_671[0], &g_182, (void*)0, &g_182, &g_182}, {&l_671[0], &g_182, &g_182, &g_182, &l_671[0], &g_182, (void*)0, &g_182, &g_182}, {&l_671[0], &g_182, &g_182, &g_182, &l_671[0], &g_182, (void*)0, &g_182, &g_182}};
    uint32_t *** const l_675 = &g_265[1][0][3];
    uint8_t l_690[4];
    int i, j;
    for (i = 0; i < 4; i++) {
      DCEMarker3_();
      l_690[i] = 0xAAL;
    }
    for (g_138 = 21; (g_138 > 22);
         g_138 = safe_add_func_int16_t_s_s(g_138, 8)) {
      DCEMarker4_(); /* block id: 415 */
      return &g_29;
      /* statement id: 416 */
      // assert (func_10_rv == &g_29);
    }
    DCEMarker5_();
    g_666 = (p_14 = func_39((safe_sub_func_uint16_t_u_u(65527UL, (***g_550))), (*p_14), p_11, l_671[1]));
    for (g_26 = 0; (g_26 != 26); ++g_26) {
      DCEMarker6_(); /* block id: 422 */
      int32_t *l_677 = &g_37;
      int16_t l_678 = 0x88CEL;
      int32_t l_679 = 0x8C0E343EL;
      int32_t l_680 = 0L;
      int32_t l_681[3][4] = {{0x569AFA46L, (-5L), (-5L), (-5L)},
                             {0x569AFA46L, (-5L), (-5L), (-5L)},
                             {0x569AFA46L, (-5L), (-5L), (-5L)}};
      uint32_t l_682[6] = {0x1969914BL, 0x1969914BL, 18446744073709551609UL,
                           0x1969914BL, 0x1969914BL, 18446744073709551609UL};
      int i, j;
      if ((l_675 == &g_265[1][0][3])) {
        DCEMarker9_(); /* block id: 423 */
        const int32_t *l_676 = &g_35[4];
        return l_676;
        /* statement id: 424 */
        // assert ((func_10_rv >= &g_35[0] && func_10_rv <= &g_35[9]));
      } else {
        DCEMarker10_(); /* block id: 425 */
        l_677 = (p_14 = l_677);
        (*p_14) |= (-1L);
      }
      DCEMarker11_();
      --l_682[4];
    }
    DCEMarker7_();
    for (p_12 = 0; (p_12 == (-17)); p_12 = safe_sub_func_int16_t_s_s(p_12, 2)) {
      DCEMarker8_(); /* block id: 434 */
      const int32_t l_687 = 1L;
      (*g_666) ^= (p_12 && l_687);
      p_14 = &g_107[0];
      /* statement id: 436 */
      assert((p_14 >= &g_107[0] && p_14 <= &g_107[5]));
      for (g_26 = 6; (g_26 >= 0); g_26 -= 1) {
        DCEMarker12_(); /* block id: 439 */
        int i;
        p_14 = &g_35[(g_26 + 1)];
        /* statement id: 440 */
        assert((p_14 >= &g_35[0] && p_14 <= &g_35[9]));
      }
      /* facts after for loop */
      assert((p_14 >= &g_35[0] && p_14 <= &g_35[9]) ||
             (p_14 >= &g_107[0] && p_14 <= &g_107[5]));
      for (g_163 = (-28); (g_163 <= (-30)); --g_163) {
        DCEMarker13_(); /* block id: 444 */
        (*g_666) = ((l_690[2] = (**g_164)) &
                    (safe_mod_func_uint16_t_u_u((g_462 &= (**g_164)), p_13)));
      }
    }
    /* facts after for loop */
    assert ((p_14 >= &g_35[0] && p_14 <= &g_35[9]) || (p_14 >= &g_107[0] && p_14 <= &g_107[5]) || p_14 == &g_37);
    return &g_107[4];
    /* statement id: 450 */
    //assert ((func_10_rv >= &g_107[0] && func_10_rv <= &g_107[5]));
}


/* ------------------------------------------ */
/* 
 * reads : g_2 g_182 g_107 g_37 g_454 g_163 g_354 g_666
 * writes: g_37 g_107 g_102 g_354 g_26
 */
inline static int32_t * func_19(int32_t  p_20, const int32_t * p_21, int32_t * p_22, int32_t * p_23)
{ /* block id: 400 */
    int32_t *l_634 = &g_37;
    int32_t *l_635 = &g_107[2];
    int8_t *l_644 = (void*)0;
    int8_t *l_645[10][3] = {{&g_124, &g_102, &g_104}, {&g_124, &g_102, &g_104}, {&g_124, &g_102, &g_104}, {&g_124, &g_102, &g_104}, {&g_124, &g_102, &g_104}, {&g_124, &g_102, &g_104}, {&g_124, &g_102, &g_104}, {&g_124, &g_102, &g_104}, {&g_124, &g_102, &g_104}, {&g_124, &g_102, &g_104}};
    uint32_t *l_648 = (void*)0;
    uint32_t *l_649 = (void*)0;
    uint32_t *l_650[5][2][3] = {{{&g_85[3], &g_281, &g_281}, {&g_85[3], &g_281, &g_281}}, {{&g_85[3], &g_281, &g_281}, {&g_85[3], &g_281, &g_281}}, {{&g_85[3], &g_281, &g_281}, {&g_85[3], &g_281, &g_281}}, {{&g_85[3], &g_281, &g_281}, {&g_85[3], &g_281, &g_281}}, {{&g_85[3], &g_281, &g_281}, {&g_85[3], &g_281, &g_281}}};
    int32_t l_651 = 0x2EA61CA3L;
    int i, j, k;
    p_20 &= ((*l_635) = ((*l_634) = (*p_22)));
    g_26 = ((*l_634) = (safe_sub_func_uint8_t_u_u((safe_sub_func_uint32_t_u_u((safe_unary_minus_func_int32_t_s((*g_182))), ((*l_635) = (!(safe_lshift_func_int8_t_s_u((g_102 = ((*l_635) > (*l_634))), (((*g_182) != (l_651 = (safe_lshift_func_int8_t_s_u((0xC9L & (*l_635)), 7)))) > (safe_add_func_uint8_t_u_u((safe_lshift_func_int16_t_s_u((safe_lshift_func_int16_t_s_u((safe_rshift_func_int16_t_s_u((g_354 &= (safe_mod_func_uint8_t_u_u((((safe_rshift_func_int8_t_s_s(0x05L, 7)) >= (safe_add_func_int8_t_s_s(((p_20 || 0xACEBA0E5L) && (*g_454)), 0x2FL))) & 0xD8L), (*l_635)))), 2)), (*l_634))), p_20)), 0L))))))))), (*l_634))));
    (*l_635) = (-2L);
    return g_666;
    /* statement id: 411 */
    //assert (func_19_rv == &g_37 || func_19_rv == 0);
}


/* ------------------------------------------ */
/* 
 * reads : g_2 g_35
 * writes: g_35 g_37
 */
static int32_t * func_30(int32_t * p_31, uint8_t  p_32, int32_t  p_33)
{ /* block id: 6 */
    int32_t *l_34 = &g_35[4];
    int32_t *l_36 = &g_37;
    int32_t l_338[6] = {0xE3861DA1L, 2L, 0xE3861DA1L, 2L, 0xE3861DA1L, 2L};
    int32_t l_339 = 0x821AC3AEL;
    uint16_t *l_381 = &g_331[0][1];
    int32_t l_384 = 0xE820B6D7L;
    int8_t *l_408 = &g_104;
    int8_t **l_407 = &l_408;
    int32_t l_474 = 0x8FBE2037L;
    uint16_t ***l_483 = &g_164;
    int16_t ***l_555[9][3][8] = {{{&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}}, {{&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}}, {{&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}}, {{&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}}, {{&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}}, {{&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}}, {{&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}}, {{&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}}, {{&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}, {&g_551, &g_551, &g_551, (void*)0, &g_551, &g_551, &g_551, (void*)0}}};
    uint32_t **l_606[10][4] = {{&g_266[4][9], &g_266[0][9], &g_266[4][9], &g_266[0][9]}, {&g_266[4][9], &g_266[0][9], &g_266[4][9], &g_266[0][9]}, {&g_266[4][9], &g_266[0][9], &g_266[4][9], &g_266[0][9]}, {&g_266[4][9], &g_266[0][9], &g_266[4][9], &g_266[0][9]}, {&g_266[4][9], &g_266[0][9], &g_266[4][9], &g_266[0][9]}, {&g_266[4][9], &g_266[0][9], &g_266[4][9], &g_266[0][9]}, {&g_266[4][9], &g_266[0][9], &g_266[4][9], &g_266[0][9]}, {&g_266[4][9], &g_266[0][9], &g_266[4][9], &g_266[0][9]}, {&g_266[4][9], &g_266[0][9], &g_266[4][9], &g_266[0][9]}, {&g_266[4][9], &g_266[0][9], &g_266[4][9], &g_266[0][9]}};
    uint32_t l_618 = 0x855899EDL;
    int32_t *l_621 = &g_37;
    int32_t *l_622 = &l_474;
    int32_t *l_623 = &l_338[5];
    int32_t *l_624 = (void*)0;
    int32_t *l_625 = &g_35[4];
    int32_t *l_626 = &l_339;
    int32_t *l_627 = &l_338[5];
    int32_t *l_628[2];
    uint32_t l_629 = 0x7053189AL;
    int i, j, k;
    for (i = 0; i < 2; i++) {
      DCEMarker14_();
      l_628[i] = &g_35[4];
    }
    (*l_36) = ((*l_34) ^= (*p_31));
    g_35[4] = 0x211521FAL;
    return p_31;
    /* statement id: 398 */
    //assert (func_30_rv == &g_2);
}


/* ------------------------------------------ */
/* 
 * reads : g_35 g_29
 * writes: g_35
 */
inline static int32_t * func_39(uint16_t  p_40, int32_t  p_41, uint32_t  p_42, int32_t * p_43)
{ /* block id: 12 */
    uint16_t l_50 = 0x64ADL;
    int32_t l_53 = 0xBC0AE227L;
    for (p_40 = 3; (p_40 <= 9); p_40 += 1) {
      DCEMarker15_(); /* block id: 15 */
      int32_t *l_48 = &g_35[p_40];
      int32_t *l_49[10][10][2] = {{{&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0}},
                                  {{&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0}},
                                  {{&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0}},
                                  {{&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0}},
                                  {{&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0}},
                                  {{&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0}},
                                  {{&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0}},
                                  {{&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0}},
                                  {{&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0}},
                                  {{&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0},
                                   {&g_35[6], (void *)0}}};
      int i, j, k;
      l_50++;
      (*l_48) = (g_35[p_40] == l_53);
      if (g_29) {
        DCEMarker16_();
        continue;
      }
    }
    return &g_37;
    /* statement id: 20 */
    //assert (func_39_rv == &g_37);
}


/* ------------------------------------------ */
/* 
 * reads : g_47
 * writes:
 */
static const uint8_t  func_55(uint16_t  p_56, int32_t  p_57)
{ /* block id: 168 */
  for (p_56 = 0; (p_56 == 15); p_56 = safe_add_func_uint32_t_u_u(p_56, 8)) {
    DCEMarker17_(); /* block id: 171 */
    return p_56;
  }
  DCEMarker18_();
  return g_47[2][0];
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
inline static int32_t  func_60(int8_t  p_61, int32_t * p_62, uint16_t  p_63)
{ /* block id: 165 */
    uint16_t l_247 = 0x5BA2L;
    return l_247;
}


/* ------------------------------------------ */
/* 
 * reads : g_163 g_47
 * writes: g_163
 */
static uint8_t  func_64(uint8_t * p_65, int32_t * p_66, uint16_t  p_67, int32_t * p_68, const int32_t * p_69)
{ /* block id: 156 */
    uint32_t l_242 = 0UL;
    int32_t *l_245 = (void*)0;
    int32_t **l_246 = &l_245;
    for (g_163 = 4; (g_163 > (-15));
         g_163 = safe_sub_func_int8_t_s_s(g_163, 4)) {
      DCEMarker19_(); /* block id: 159 */
      int32_t *l_239 = &g_107[3];
      int32_t *l_240 = &g_107[4];
      int32_t *l_241[1][6] = {
          {&g_35[4], &g_35[4], &g_107[3], &g_35[4], &g_35[4], &g_107[3]}};
      int i, j;
      l_242--;
      return p_67;
    }
    DCEMarker20_();
    (*l_246) = l_245;
    return g_47[0][0];
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static uint8_t * func_70(const int32_t  p_71)
{ /* block id: 22 */
    int32_t l_72 = 2L;
    int32_t l_77[10][10][2] = {{{0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}}, {{0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}}, {{0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}}, {{0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}}, {{0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}}, {{0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}}, {{0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}}, {{0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}}, {{0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}}, {{0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}, {0xB4EA9966L, (-1L)}}};
    uint32_t *l_84[4];
    int32_t l_86 = 5L;
    uint8_t *l_87[6] = {&g_47[0][0], &g_47[0][0], &g_47[2][0], &g_47[0][0], &g_47[0][0], &g_47[2][0]};
    int32_t l_88 = 0x4E0B5904L;
    int16_t *l_89 = &g_90[0];
    int16_t l_125 = 7L;
    int16_t *l_131 = &g_90[0];
    int32_t *l_183 = (void*)0;
    uint8_t *l_234 = (void*)0;
    int i, j, k;
    for (i = 0; i < 4; i++) {
      DCEMarker21_();
      l_84[i] = &g_85[4];
    }
    return l_234;
    /* statement id: 154 */
    //assert (func_70_rv == 0);
}




/* ---------------------------------------- */
int main (void)
{
    int i, j, k;
    int print_hash_value = 0;
    platform_main_begin();
    crc32_gentab();
    func_1();
    transparent_crc(g_2, "g_2", print_hash_value);
    transparent_crc(g_26, "g_26", print_hash_value);
    transparent_crc(g_29, "g_29", print_hash_value);
    for (i = 0; i < 10; i++) {
      DCEMarker22_();
      transparent_crc(g_35[i], "g_35[i]", print_hash_value);
      if (print_hash_value) {
        DCEMarker30_();
        printf("index = [%d]\n", i);
      }
    }
    transparent_crc(g_37, "g_37", print_hash_value);
    for (i = 0; i < 4; i++) {
      DCEMarker23_();
      for (j = 0; j < 1; j++) {
        DCEMarker31_();
        transparent_crc(g_47[i][j], "g_47[i][j]", print_hash_value);
        if (print_hash_value) {
          DCEMarker32_();
          printf("index = [%d][%d]\n", i, j);
        }
      }
    }
    for (i = 0; i < 9; i++) {
      DCEMarker24_();
      transparent_crc(g_85[i], "g_85[i]", print_hash_value);
      if (print_hash_value) {
        DCEMarker33_();
        printf("index = [%d]\n", i);
      }
    }
    for (i = 0; i < 1; i++) {
      DCEMarker25_();
      transparent_crc(g_90[i], "g_90[i]", print_hash_value);
      if (print_hash_value) {
        DCEMarker34_();
        printf("index = [%d]\n", i);
      }
    }
    transparent_crc(g_102, "g_102", print_hash_value);
    transparent_crc(g_104, "g_104", print_hash_value);
    for (i = 0; i < 6; i++) {
      DCEMarker26_();
      transparent_crc(g_107[i], "g_107[i]", print_hash_value);
      if (print_hash_value) {
        DCEMarker35_();
        printf("index = [%d]\n", i);
      }
    }
    transparent_crc(g_124, "g_124", print_hash_value);
    transparent_crc(g_138, "g_138", print_hash_value);
    transparent_crc(g_163, "g_163", print_hash_value);
    transparent_crc(g_281, "g_281", print_hash_value);
    transparent_crc(g_318, "g_318", print_hash_value);
    transparent_crc(g_320, "g_320", print_hash_value);
    transparent_crc(g_328, "g_328", print_hash_value);
    for (i = 0; i < 5; i++) {
      DCEMarker27_();
      for (j = 0; j < 2; j++) {
        DCEMarker36_();
        transparent_crc(g_331[i][j], "g_331[i][j]", print_hash_value);
        if (print_hash_value) {
          DCEMarker37_();
          printf("index = [%d][%d]\n", i, j);
        }
      }
    }
    transparent_crc(g_354, "g_354", print_hash_value);
    for (i = 0; i < 9; i++) {
      DCEMarker28_();
      for (j = 0; j < 4; j++) {
        DCEMarker38_();
        transparent_crc(g_425[i][j], "g_425[i][j]", print_hash_value);
        if (print_hash_value) {
          DCEMarker39_();
          printf("index = [%d][%d]\n", i, j);
        }
      }
    }
    transparent_crc(g_446, "g_446", print_hash_value);
    transparent_crc(g_462, "g_462", print_hash_value);
    transparent_crc(g_473, "g_473", print_hash_value);
    transparent_crc(g_475, "g_475", print_hash_value);
    transparent_crc(g_585, "g_585", print_hash_value);
    for (i = 0; i < 1; i++) {
      DCEMarker29_();
      for (j = 0; j < 7; j++) {
        DCEMarker40_();
        transparent_crc(g_701[i][j], "g_701[i][j]", print_hash_value);
        if (print_hash_value) {
          DCEMarker41_();
          printf("index = [%d][%d]\n", i, j);
        }
      }
    }
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 0
breakdown:
   depth: 0, occurrence: 173
XXX total union variables: 0

XXX max expression depth: 25
breakdown:
   depth: 1, occurrence: 47
   depth: 2, occurrence: 14
   depth: 3, occurrence: 1
   depth: 5, occurrence: 1
   depth: 7, occurrence: 1
   depth: 25, occurrence: 1

XXX total number of pointers: 204

XXX times a variable address is taken: 453
XXX times a pointer is dereferenced on RHS: 83
breakdown:
   depth: 1, occurrence: 68
   depth: 2, occurrence: 14
   depth: 3, occurrence: 1
XXX times a pointer is dereferenced on LHS: 112
breakdown:
   depth: 1, occurrence: 104
   depth: 2, occurrence: 6
   depth: 3, occurrence: 2
XXX times a pointer is compared with null: 21
XXX times a pointer is compared with address of another variable: 6
XXX times a pointer is compared with another pointer: 12
XXX times a pointer is qualified to be dereferenced: 2556

XXX max dereference level: 4
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 551
   level: 2, occurrence: 91
   level: 3, occurrence: 16
   level: 4, occurrence: 14
XXX number of pointers point to pointers: 80
XXX number of pointers point to scalars: 124
XXX number of pointers point to structs: 0
XXX percent of pointers has null in alias set: 31.9
XXX average alias set size: 1.46

XXX times a non-volatile is read: 589
XXX times a non-volatile is write: 365
XXX times a volatile is read: 0
XXX    times read thru a pointer: 0
XXX times a volatile is write: 0
XXX    times written thru a pointer: 0
XXX times a volatile is available for access: 0
XXX percentage of non-volatile access: 100

XXX forward jumps: 0
XXX backward jumps: 4

XXX stmts: 45
XXX max block depth: 2
breakdown:
   depth: 0, occurrence: 27
   depth: 1, occurrence: 13
   depth: 2, occurrence: 5

XXX percentage a fresh-made variable is used: 16.2
XXX percentage an existing variable is used: 83.8
********************* end of statistics **********************/


