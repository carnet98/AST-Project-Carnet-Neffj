void DCEMarker0_(void);
void DCEMarker1_(void);
void DCEMarker2_(void);
void DCEMarker3_(void);
void DCEMarker4_(void);
void DCEMarker5_(void);
void DCEMarker6_(void);
void DCEMarker7_(void);
void DCEMarker8_(void);
void DCEMarker9_(void);
void DCEMarker10_(void);
void DCEMarker11_(void);
void DCEMarker12_(void);
void DCEMarker13_(void);
void DCEMarker14_(void);
void DCEMarker15_(void);
void DCEMarker16_(void);
void DCEMarker17_(void);
void DCEMarker18_(void);
void DCEMarker19_(void);
void DCEMarker20_(void);
void DCEMarker21_(void);
void DCEMarker22_(void);
void DCEMarker23_(void);
void DCEMarker24_(void);
void DCEMarker25_(void);
void DCEMarker26_(void);
void DCEMarker27_(void);
void DCEMarker28_(void);
void DCEMarker29_(void);
void DCEMarker30_(void);
void DCEMarker31_(void);
void DCEMarker32_(void);
void DCEMarker33_(void);
void DCEMarker34_(void);
void DCEMarker35_(void);
void DCEMarker36_(void);
void DCEMarker37_(void);
void DCEMarker38_(void);
void DCEMarker39_(void);
void DCEMarker40_(void);
void DCEMarker41_(void);
void DCEMarker42_(void);
void DCEMarker43_(void);
void DCEMarker44_(void);
/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   --no-unions --safe-math --no-argc --no-volatiles
 * --no-volatile-pointers --arrays --no-bitfields --checksum --comma-operators
 * --no-compound-assignment --no-consts --no-divs --no-embedded-assigns --jumps
 * --longlong --no-force-non-uniform-arrays --math64 --no-muls --packed-struct
 * --no-paranoid --pointers --structs --no-inline-function --return-structs
 * --arg-structs --no-dangling-global-pointers Seed:      411069329
 */

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
#pragma pack(push)
#pragma pack(1)
struct S0 {
   uint16_t  f0;
   int64_t  f1;
   uint32_t  f2;
   uint16_t  f3;
   int16_t  f4;
   uint32_t  f5;
};
#pragma pack(pop)

/* --- GLOBAL VARIABLES --- */
static uint64_t g_5[6] = {0x84515FDC8DFBA22ELL, 0x0815898F01BA028ELL, 0x84515FDC8DFBA22ELL, 0x0815898F01BA028ELL, 0x84515FDC8DFBA22ELL, 0x0815898F01BA028ELL};
static struct S0 g_62[2][6][10] = {{{{65535UL,0x7D8A796D56EF34DDLL,0xF9EB425EL,65535UL,0x2066L,0x5C64D3B6L}, {1UL,0xFCAC0D74891BC53CLL,0UL,7UL,0xF0BAL,18446744073709551615UL}, {0UL,0L,0x02009A6DL,0xC577L,5L,18446744073709551615UL}, {9UL,-7L,0UL,1UL,2L,0x498492E7L}, {0xD0F0L,0x4999BD31A79BCA12LL,0x892B40E8L,0UL,2L,0x0C4EEBD0L}, {65530UL,-1L,0x355DAA1CL,65533UL,0xBFF9L,18446744073709551613UL}, {65527UL,0xDB6A5085D5259FC7LL,0xB8142826L,1UL,0x65E9L,1UL}, {0x4CA5L,0L,8UL,65526UL,4L,0xCD109C4FL}, {65532UL,0xA66F312D9EA3BD3CLL,1UL,65535UL,-4L,0UL}, {0x60C4L,8L,18446744073709551615UL,0xEC7FL,8L,7UL}}, {{65535UL,0x7D8A796D56EF34DDLL,0xF9EB425EL,65535UL,0x2066L,0x5C64D3B6L}, {1UL,0xFCAC0D74891BC53CLL,0UL,7UL,0xF0BAL,18446744073709551615UL}, {0UL,0L,0x02009A6DL,0xC577L,5L,18446744073709551615UL}, {9UL,-7L,0UL,1UL,2L,0x498492E7L}, {0xD0F0L,0x4999BD31A79BCA12LL,0x892B40E8L,0UL,2L,0x0C4EEBD0L}, {65530UL,-1L,0x355DAA1CL,65533UL,0xBFF9L,18446744073709551613UL}, {65527UL,0xDB6A5085D5259FC7LL,0xB8142826L,1UL,0x65E9L,1UL}, {0x4CA5L,0L,8UL,65526UL,4L,0xCD109C4FL}, {65532UL,0xA66F312D9EA3BD3CLL,1UL,65535UL,-4L,0UL}, {0x60C4L,8L,18446744073709551615UL,0xEC7FL,8L,7UL}}, {{65535UL,0x7D8A796D56EF34DDLL,0xF9EB425EL,65535UL,0x2066L,0x5C64D3B6L}, {1UL,0xFCAC0D74891BC53CLL,0UL,7UL,0xF0BAL,18446744073709551615UL}, {0UL,0L,0x02009A6DL,0xC577L,5L,18446744073709551615UL}, {9UL,-7L,0UL,1UL,2L,0x498492E7L}, {0xD0F0L,0x4999BD31A79BCA12LL,0x892B40E8L,0UL,2L,0x0C4EEBD0L}, {65530UL,-1L,0x355DAA1CL,65533UL,0xBFF9L,18446744073709551613UL}, {65527UL,0xDB6A5085D5259FC7LL,0xB8142826L,1UL,0x65E9L,1UL}, {0x4CA5L,0L,8UL,65526UL,4L,0xCD109C4FL}, {65532UL,0xA66F312D9EA3BD3CLL,1UL,65535UL,-4L,0UL}, {0x60C4L,8L,18446744073709551615UL,0xEC7FL,8L,7UL}}, {{65535UL,0x7D8A796D56EF34DDLL,0xF9EB425EL,65535UL,0x2066L,0x5C64D3B6L}, {1UL,0xFCAC0D74891BC53CLL,0UL,7UL,0xF0BAL,18446744073709551615UL}, {0UL,0L,0x02009A6DL,0xC577L,5L,18446744073709551615UL}, {9UL,-7L,0UL,1UL,2L,0x498492E7L}, {0xD0F0L,0x4999BD31A79BCA12LL,0x892B40E8L,0UL,2L,0x0C4EEBD0L}, {65530UL,-1L,0x355DAA1CL,65533UL,0xBFF9L,18446744073709551613UL}, {65527UL,0xDB6A5085D5259FC7LL,0xB8142826L,1UL,0x65E9L,1UL}, {0x4CA5L,0L,8UL,65526UL,4L,0xCD109C4FL}, {65532UL,0xA66F312D9EA3BD3CLL,1UL,65535UL,-4L,0UL}, {0x60C4L,8L,18446744073709551615UL,0xEC7FL,8L,7UL}}, {{65535UL,0x7D8A796D56EF34DDLL,0xF9EB425EL,65535UL,0x2066L,0x5C64D3B6L}, {1UL,0xFCAC0D74891BC53CLL,0UL,7UL,0xF0BAL,18446744073709551615UL}, {0UL,0L,0x02009A6DL,0xC577L,5L,18446744073709551615UL}, {9UL,-7L,0UL,1UL,2L,0x498492E7L}, {0xD0F0L,0x4999BD31A79BCA12LL,0x892B40E8L,0UL,2L,0x0C4EEBD0L}, {65530UL,-1L,0x355DAA1CL,65533UL,0xBFF9L,18446744073709551613UL}, {65527UL,0xDB6A5085D5259FC7LL,0xB8142826L,1UL,0x65E9L,1UL}, {0x4CA5L,0L,8UL,65526UL,4L,0xCD109C4FL}, {65532UL,0xA66F312D9EA3BD3CLL,1UL,65535UL,-4L,0UL}, {0x60C4L,8L,18446744073709551615UL,0xEC7FL,8L,7UL}}, {{65535UL,0x7D8A796D56EF34DDLL,0xF9EB425EL,65535UL,0x2066L,0x5C64D3B6L}, {1UL,0xFCAC0D74891BC53CLL,0UL,7UL,0xF0BAL,18446744073709551615UL}, {0UL,0L,0x02009A6DL,0xC577L,5L,18446744073709551615UL}, {9UL,-7L,0UL,1UL,2L,0x498492E7L}, {0xD0F0L,0x4999BD31A79BCA12LL,0x892B40E8L,0UL,2L,0x0C4EEBD0L}, {65530UL,-1L,0x355DAA1CL,65533UL,0xBFF9L,18446744073709551613UL}, {65527UL,0xDB6A5085D5259FC7LL,0xB8142826L,1UL,0x65E9L,1UL}, {0x4CA5L,0L,8UL,65526UL,4L,0xCD109C4FL}, {65532UL,0xA66F312D9EA3BD3CLL,1UL,65535UL,-4L,0UL}, {0x60C4L,8L,18446744073709551615UL,0xEC7FL,8L,7UL}}}, {{{65535UL,0x7D8A796D56EF34DDLL,0xF9EB425EL,65535UL,0x2066L,0x5C64D3B6L}, {1UL,0xFCAC0D74891BC53CLL,0UL,7UL,0xF0BAL,18446744073709551615UL}, {0UL,0L,0x02009A6DL,0xC577L,5L,18446744073709551615UL}, {9UL,-7L,0UL,1UL,2L,0x498492E7L}, {0xD0F0L,0x4999BD31A79BCA12LL,0x892B40E8L,0UL,2L,0x0C4EEBD0L}, {65530UL,-1L,0x355DAA1CL,65533UL,0xBFF9L,18446744073709551613UL}, {65527UL,0xDB6A5085D5259FC7LL,0xB8142826L,1UL,0x65E9L,1UL}, {0x4CA5L,0L,8UL,65526UL,4L,0xCD109C4FL}, {65532UL,0xA66F312D9EA3BD3CLL,1UL,65535UL,-4L,0UL}, {0x60C4L,8L,18446744073709551615UL,0xEC7FL,8L,7UL}}, {{65535UL,0x7D8A796D56EF34DDLL,0xF9EB425EL,65535UL,0x2066L,0x5C64D3B6L}, {1UL,0xFCAC0D74891BC53CLL,0UL,7UL,0xF0BAL,18446744073709551615UL}, {0UL,0L,0x02009A6DL,0xC577L,5L,18446744073709551615UL}, {9UL,-7L,0UL,1UL,2L,0x498492E7L}, {0xD0F0L,0x4999BD31A79BCA12LL,0x892B40E8L,0UL,2L,0x0C4EEBD0L}, {65530UL,-1L,0x355DAA1CL,65533UL,0xBFF9L,18446744073709551613UL}, {65527UL,0xDB6A5085D5259FC7LL,0xB8142826L,1UL,0x65E9L,1UL}, {0x4CA5L,0L,8UL,65526UL,4L,0xCD109C4FL}, {65532UL,0xA66F312D9EA3BD3CLL,1UL,65535UL,-4L,0UL}, {0x60C4L,8L,18446744073709551615UL,0xEC7FL,8L,7UL}}, {{65535UL,0x7D8A796D56EF34DDLL,0xF9EB425EL,65535UL,0x2066L,0x5C64D3B6L}, {1UL,0xFCAC0D74891BC53CLL,0UL,7UL,0xF0BAL,18446744073709551615UL}, {0UL,0L,0x02009A6DL,0xC577L,5L,18446744073709551615UL}, {9UL,-7L,0UL,1UL,2L,0x498492E7L}, {0xD0F0L,0x4999BD31A79BCA12LL,0x892B40E8L,0UL,2L,0x0C4EEBD0L}, {65530UL,-1L,0x355DAA1CL,65533UL,0xBFF9L,18446744073709551613UL}, {65527UL,0xDB6A5085D5259FC7LL,0xB8142826L,1UL,0x65E9L,1UL}, {0x4CA5L,0L,8UL,65526UL,4L,0xCD109C4FL}, {65532UL,0xA66F312D9EA3BD3CLL,1UL,65535UL,-4L,0UL}, {0x60C4L,8L,18446744073709551615UL,0xEC7FL,8L,7UL}}, {{65535UL,0x7D8A796D56EF34DDLL,0xF9EB425EL,65535UL,0x2066L,0x5C64D3B6L}, {1UL,0xFCAC0D74891BC53CLL,0UL,7UL,0xF0BAL,18446744073709551615UL}, {0UL,0L,0x02009A6DL,0xC577L,5L,18446744073709551615UL}, {9UL,-7L,0UL,1UL,2L,0x498492E7L}, {0xD0F0L,0x4999BD31A79BCA12LL,0x892B40E8L,0UL,2L,0x0C4EEBD0L}, {65530UL,-1L,0x355DAA1CL,65533UL,0xBFF9L,18446744073709551613UL}, {65527UL,0xDB6A5085D5259FC7LL,0xB8142826L,1UL,0x65E9L,1UL}, {0x4CA5L,0L,8UL,65526UL,4L,0xCD109C4FL}, {65532UL,0xA66F312D9EA3BD3CLL,1UL,65535UL,-4L,0UL}, {0x60C4L,8L,18446744073709551615UL,0xEC7FL,8L,7UL}}, {{65535UL,0x7D8A796D56EF34DDLL,0xF9EB425EL,65535UL,0x2066L,0x5C64D3B6L}, {1UL,0xFCAC0D74891BC53CLL,0UL,7UL,0xF0BAL,18446744073709551615UL}, {0UL,0L,0x02009A6DL,0xC577L,5L,18446744073709551615UL}, {9UL,-7L,0UL,1UL,2L,0x498492E7L}, {0xD0F0L,0x4999BD31A79BCA12LL,0x892B40E8L,0UL,2L,0x0C4EEBD0L}, {65530UL,-1L,0x355DAA1CL,65533UL,0xBFF9L,18446744073709551613UL}, {65527UL,0xDB6A5085D5259FC7LL,0xB8142826L,1UL,0x65E9L,1UL}, {0x4CA5L,0L,8UL,65526UL,4L,0xCD109C4FL}, {65532UL,0xA66F312D9EA3BD3CLL,1UL,65535UL,-4L,0UL}, {0x60C4L,8L,18446744073709551615UL,0xEC7FL,8L,7UL}}, {{65535UL,0x7D8A796D56EF34DDLL,0xF9EB425EL,65535UL,0x2066L,0x5C64D3B6L}, {1UL,0xFCAC0D74891BC53CLL,0UL,7UL,0xF0BAL,18446744073709551615UL}, {0UL,0L,0x02009A6DL,0xC577L,5L,18446744073709551615UL}, {9UL,-7L,0UL,1UL,2L,0x498492E7L}, {0xD0F0L,0x4999BD31A79BCA12LL,0x892B40E8L,0UL,2L,0x0C4EEBD0L}, {65530UL,-1L,0x355DAA1CL,65533UL,0xBFF9L,18446744073709551613UL}, {65527UL,0xDB6A5085D5259FC7LL,0xB8142826L,1UL,0x65E9L,1UL}, {0x4CA5L,0L,8UL,65526UL,4L,0xCD109C4FL}, {65532UL,0xA66F312D9EA3BD3CLL,1UL,65535UL,-4L,0UL}, {0x60C4L,8L,18446744073709551615UL,0xEC7FL,8L,7UL}}}};
static int32_t g_65 = 0x80C45E75L;
static int32_t *g_71 = &g_65;
static int32_t **g_70 = &g_71;
static int64_t g_120 = 0xAABE5D2F0E14FAFFLL;
static struct S0 *g_122 = (void*)0;
static struct S0 **g_121 = &g_122;
static struct S0 ***g_203 = (void*)0;
static struct S0 ****g_228 = &g_203;


/* --- FORWARD DECLARATIONS --- */
static int64_t  func_1(void);
static struct S0  func_2(uint32_t  p_3);
static uint64_t  func_6(uint64_t  p_7, int32_t  p_8);
static struct S0  func_10(struct S0  p_11, int32_t  p_12);
static struct S0  func_13(uint64_t  p_14, struct S0  p_15, int32_t  p_16, int64_t  p_17, int32_t  p_18);
static uint16_t  func_23(uint32_t  p_24);
static int8_t  func_39(uint32_t  p_40, int32_t  p_41, uint32_t  p_42);
static int16_t  func_43(struct S0  p_44);
static struct S0  func_45(uint64_t  p_46, int16_t  p_47, int64_t  p_48, uint64_t  p_49);
static int32_t  func_52(uint16_t  p_53, int32_t  p_54, uint16_t  p_55, int8_t  p_56);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_5 g_228 g_203 g_62.f5 g_62.f2 g_71 g_65 g_70 g_62.f0
 * writes: g_203 g_65
 */
static int64_t  func_1(void)
{ /* block id: 0 */
    uint8_t l_4 = 0x0DL;
    struct S0 l_426 = {0xC594L,0xE93256D09AEA5B71LL,0xFBB1A635L,0xBED6L,0x8FA8L,0xA3530A74L};
    l_426 = func_2(((l_4 > (g_5[1] && l_4)) == func_6(g_5[1], l_4)));
    for (l_426.f5 = 1; (l_426.f5 <= 5); l_426.f5 += 1) {
      DCEMarker0_(); /* block id: 234 */
      int32_t l_429 = 0x82C671F6L;
      int32_t ***l_430[4][5] = {{(void *)0, (void *)0, &g_70, &g_70, &g_70},
                                {(void *)0, (void *)0, &g_70, &g_70, &g_70},
                                {(void *)0, (void *)0, &g_70, &g_70, &g_70},
                                {(void *)0, (void *)0, &g_70, &g_70, &g_70}};
      int i, j;
      (*g_71) = ((!((((+((&g_70 != (void *)0) == 0xCC45199AL)) && 0x55L) &&
                     g_62[1][5][8].f5) |
                    (((((((g_62[1][5][8].f2, ((l_429, &g_70) == l_430[3][1])),
                          (*g_71)) ^
                         (**g_70)) ||
                        (-1L)) &&
                       0x75429D6DL),
                      &g_70) != &g_70))) ^
                 l_426.f0);
      return l_426.f4;
    }
    DCEMarker1_();
    for (l_426.f2 = 0; (l_426.f2 <= 5); l_426.f2 += 1) {
      DCEMarker2_(); /* block id: 240 */
      uint8_t l_431[10][2][7] = {
          {{0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL},
           {0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL}},
          {{0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL},
           {0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL}},
          {{0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL},
           {0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL}},
          {{0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL},
           {0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL}},
          {{0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL},
           {0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL}},
          {{0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL},
           {0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL}},
          {{0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL},
           {0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL}},
          {{0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL},
           {0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL}},
          {{0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL},
           {0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL}},
          {{0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL},
           {0x77L, 0x8FL, 0x66L, 0x8FL, 0x77L, 1UL, 1UL}}};
      int i, j, k;
      return l_431[6][1][0];
    }
    DCEMarker3_();
    return g_62[1][5][8].f0;
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static struct S0  func_2(uint32_t  p_3)
{ /* block id: 229 */
    struct S0 l_425 = {0x8D39L,0x5AD5DE35B4D5B1FBLL,18446744073709551615UL,65535UL,0x3019L,0x6E5C4209L};
    return l_425;
}


/* ------------------------------------------ */
/* 
 * reads : g_228 g_203
 * writes: g_203
 */
static uint64_t  func_6(uint64_t  p_7, int32_t  p_8)
{ /* block id: 1 */
    uint16_t l_9[2][5];
    struct S0 l_57 = {0x5AD8L,0xDCE5F1497EA9B924LL,0x19C7819AL,0xCA6FL,0x7A31L,1UL};
    int32_t **l_211 = &g_71;
    struct S0 **l_232 = &g_122;
    int32_t l_233 = 0xC5F81281L;
    int32_t l_344[9][5] = {{(-4L), (-4L), 0x94B44C1FL, (-4L), (-4L)}, {(-4L), (-4L), 0x94B44C1FL, (-4L), (-4L)}, {(-4L), (-4L), 0x94B44C1FL, (-4L), (-4L)}, {(-4L), (-4L), 0x94B44C1FL, (-4L), (-4L)}, {(-4L), (-4L), 0x94B44C1FL, (-4L), (-4L)}, {(-4L), (-4L), 0x94B44C1FL, (-4L), (-4L)}, {(-4L), (-4L), 0x94B44C1FL, (-4L), (-4L)}, {(-4L), (-4L), 0x94B44C1FL, (-4L), (-4L)}, {(-4L), (-4L), 0x94B44C1FL, (-4L), (-4L)}};
    uint16_t l_349 = 0x44FBL;
    uint32_t l_424 = 0x24FB471DL;
    int i, j;
    for (i = 0; i < 2; i++) {
      DCEMarker4_();
      for (j = 0; j < 5; j++) {
        DCEMarker6_();
        l_9[i][j] = 4UL;
      }
    }
    for (p_8 = 1; (p_8 >= 0); p_8 -= 1) {
      DCEMarker5_(); /* block id: 4 */
      int32_t l_28 = 1L;
      uint32_t l_152[5][8][6] = {{{0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L}},
                                 {{0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L}},
                                 {{0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L}},
                                 {{0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L}},
                                 {{0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L},
                                  {0xBFCA9685L, 0xB1DE77E4L, 0UL, 4294967295UL,
                                   4294967295UL, 0x41894450L}}};
      struct S0 l_167[10] = {
          {0x4FDAL, 3L, 18446744073709551614UL, 0x20F8L, 0L, 0UL},
          {0xBAB2L, 0xB22B9342A3F1A3C8LL, 0x688D3BB8L, 1UL, 0x9A0EL,
           0x7AB407BEL},
          {0x4FDAL, 3L, 18446744073709551614UL, 0x20F8L, 0L, 0UL},
          {0xBAB2L, 0xB22B9342A3F1A3C8LL, 0x688D3BB8L, 1UL, 0x9A0EL,
           0x7AB407BEL},
          {0x4FDAL, 3L, 18446744073709551614UL, 0x20F8L, 0L, 0UL},
          {0xBAB2L, 0xB22B9342A3F1A3C8LL, 0x688D3BB8L, 1UL, 0x9A0EL,
           0x7AB407BEL},
          {0x4FDAL, 3L, 18446744073709551614UL, 0x20F8L, 0L, 0UL},
          {0xBAB2L, 0xB22B9342A3F1A3C8LL, 0x688D3BB8L, 1UL, 0x9A0EL,
           0x7AB407BEL},
          {0x4FDAL, 3L, 18446744073709551614UL, 0x20F8L, 0L, 0UL},
          {0xBAB2L, 0xB22B9342A3F1A3C8LL, 0x688D3BB8L, 1UL, 0x9A0EL,
           0x7AB407BEL}};
      struct S0 *l_202 = &g_62[1][5][8];
      struct S0 ****l_226[8][5] = {{&g_203, &g_203, &g_203, &g_203, &g_203},
                                   {&g_203, &g_203, &g_203, &g_203, &g_203},
                                   {&g_203, &g_203, &g_203, &g_203, &g_203},
                                   {&g_203, &g_203, &g_203, &g_203, &g_203},
                                   {&g_203, &g_203, &g_203, &g_203, &g_203},
                                   {&g_203, &g_203, &g_203, &g_203, &g_203},
                                   {&g_203, &g_203, &g_203, &g_203, &g_203},
                                   {&g_203, &g_203, &g_203, &g_203, &g_203}};
      int32_t **l_269 = &g_71;
      int64_t l_280 = 0x0020026B508783C2LL;
      int32_t l_315[5] = {0xD1453F94L, 2L, 0xD1453F94L, 2L, 0xD1453F94L};
      uint32_t l_321[2];
      int64_t l_345 = 0x0C0EBA14AB6AAE44LL;
      uint32_t l_384 = 0UL;
      int i, j, k;
      for (i = 0; i < 2; i++) {
        DCEMarker7_();
        l_321[i] = 4294967295UL;
      }
    }
    (*g_228) = (*g_228);
    return l_424;
}


/* ------------------------------------------ */
/* 
 * reads : g_5 g_120 g_62.f3 g_62.f0 g_121 g_122 g_70 g_71
 * writes: g_65 g_120 g_71
 */
static struct S0  func_10(struct S0  p_11, int32_t  p_12)
{ /* block id: 90 */
    int64_t l_196 = 0x3F320E88AB914D10LL;
    struct S0 l_201 = {0x4893L,0xE8C082B84FBE84A8LL,1UL,0UL,1L,6UL};
    for (p_11.f1 = (-4); (p_11.f1 <= 18); ++p_11.f1) {
      DCEMarker8_(); /* block id: 93 */
      struct S0 *l_185 = (void *)0;
      int32_t *l_197 = &g_65;
      (*l_197) = (safe_lshift_func_int8_t_s_s(
          (safe_sub_func_uint8_t_u_u(
              ((g_5[0], l_185) ==
               ((p_11,
                 (p_11.f4 <=
                  ((0x95L !=
                    (safe_sub_func_uint16_t_u_u(
                        (safe_lshift_func_int16_t_s_u(
                            0L,
                            (!(safe_lshift_func_int16_t_s_s(
                                (((g_120 &
                                   (p_11.f1 ^
                                    ((~(safe_lshift_func_uint8_t_u_s(
                                         ((g_120, p_11.f2) == p_11.f2), p_12))),
                                     p_11.f0))) &
                                  g_62[1][5][8].f3) |
                                 p_11.f5),
                                13))))),
                        l_196))) >= g_62[1][5][8].f0))),
                (*g_121))),
              1UL)),
          2));
      for (g_120 = 0; (g_120 == (-22)); g_120--) {
        DCEMarker9_(); /* block id: 97 */
        int32_t *l_200 = &g_65;
        (*g_70) = (*g_70);
        (*g_70) = l_200;
      }
    }
    return l_201;
}


/* ------------------------------------------ */
/* 
 * reads : g_70
 * writes: g_71 g_65
 */
static struct S0  func_13(uint64_t  p_14, struct S0  p_15, int32_t  p_16, int64_t  p_17, int32_t  p_18)
{ /* block id: 85 */
    int32_t *l_168 = (void*)0;
    int32_t *l_177[7][10] = {{&g_65, (void*)0, &g_65, &g_65, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0}, {&g_65, (void*)0, &g_65, &g_65, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0}, {&g_65, (void*)0, &g_65, &g_65, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0}, {&g_65, (void*)0, &g_65, &g_65, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0}, {&g_65, (void*)0, &g_65, &g_65, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0}, {&g_65, (void*)0, &g_65, &g_65, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0}, {&g_65, (void*)0, &g_65, &g_65, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0, (void*)0}};
    struct S0 l_178[2] = {{0xED15L,1L,0x47914ABDL,65531UL,1L,18446744073709551615UL}, {0xED15L,1L,0x47914ABDL,65531UL,1L,18446744073709551615UL}};
    int i, j;
    (*g_70) = l_168;
    g_65 = (+((~0x6209L) == 0UL));
    g_65 = (safe_rshift_func_int8_t_s_s(p_15.f0, (safe_rshift_func_uint8_t_u_u(p_15.f4, 3))));
    return l_178[0];
}


/* ------------------------------------------ */
/* 
 * reads : g_62.f4 g_62.f5 g_62.f0
 * writes:
 */
static uint16_t  func_23(uint32_t  p_24)
{ /* block id: 78 */
    int16_t l_162 = 7L;
    struct S0 *l_163 = (void*)0;
    struct S0 l_165[4][5][10] = {{{{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}}, {{{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}}, {{{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}}, {{{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}, {{0x833DL,0x459226EBE7CB03AELL,18446744073709551612UL,0x055AL,0x60E6L,0x73BCE260L}, {0xC9DEL,-1L,2UL,0xF30CL,-8L,18446744073709551615UL}, {0x7FFDL,0x9C6E8BCC63CCAE71LL,0UL,0UL,0x9AA3L,0xD95E9082L}, {0xC024L,1L,0xB32EF967L,0x0DDBL,3L,0x9072B666L}, {0xD42AL,1L,3UL,1UL,0xBEF5L,0x7D920499L}, {0xC65EL,-8L,0x706E27FCL,65532UL,-5L,9UL}, {0x5DC8L,0x56ABF53F7FC248CBLL,18446744073709551612UL,0xCE00L,0xFB37L,0xFECE7D9DL}, {0x85AEL,0x1A6E50596581E331LL,18446744073709551612UL,0x215BL,-3L,18446744073709551615UL}, {0xC2C6L,-4L,0xB566AA79L,65535UL,0xF323L,0x6819490DL}, {65530UL,1L,1UL,0x3718L,0L,0UL}}}};
    int32_t l_166 = 0xAF48ABD4L;
    int i, j, k;
    if ((0x29B2F41DL >=
         ((((g_62[1][5][8].f4 &&
             (((l_162,
                ((((((l_162 != 0xAB6190955ED37AC7LL) ^ ((void *)0 != l_163)) >
                    (((p_24 || p_24) > (-1L)) && g_62[1][5][8].f5)) &&
                   4294967289UL) > 0UL) != 1UL)) <= g_62[1][5][8].f0) >
              g_62[1][5][8].f4)) <= p_24) &
           l_162),
          4294967295UL))) {
      DCEMarker10_(); /* block id: 79 */
      int16_t l_164 = 0x58D4L;
      return l_164;
    } else {
      DCEMarker11_(); /* block id: 81 */
      l_166 = (l_165[1][1][1], 0xC97DA0BDL);
      return p_24;
    }
    DCEMarker12_();
}


/* ------------------------------------------ */
/* 
 * reads : g_121
 * writes: g_122
 */
static int8_t  func_39(uint32_t  p_40, int32_t  p_41, uint32_t  p_42)
{ /* block id: 70 */
    int32_t l_161 = 0L;
    for (p_41 = 0; (p_41 <= (-29)); --p_41) {
      DCEMarker13_(); /* block id: 73 */
      int32_t **l_159[2];
      struct S0 *l_160 = &g_62[0][2][6];
      int i;
      for (i = 0; i < 2; i++) {
        DCEMarker14_();
        l_159[i] = &g_71;
      }
      (*g_121) = ((l_159[1] == (void *)0), l_160);
      for (p_40 = 0; p_40 < 2; p_40 += 1) {
        DCEMarker15_();
        l_159[p_40] = &g_71;
      }
    }
    return l_161;
}


/* ------------------------------------------ */
/* 
 * reads : g_121 g_122 g_62.f4
 * writes:
 */
static int16_t  func_43(struct S0  p_44)
{ /* block id: 67 */
    int64_t l_154 = 1L;
    struct S0 *l_155 = &g_62[1][5][8];
    int32_t l_156 = 0xD9910616L;
    l_156 = (l_154 ^ ((l_154 , l_155) == (*g_121)));
    return g_62[1][5][8].f4;
}


/* ------------------------------------------ */
/* 
 * reads : g_70
 * writes: g_71
 */
static struct S0  func_45(uint64_t  p_46, int16_t  p_47, int64_t  p_48, uint64_t  p_49)
{ /* block id: 64 */
    struct S0 l_153 = {0UL,0L,18446744073709551615UL,65532UL,0x9F04L,18446744073709551611UL};
    (*g_70) = (void*)0;
    return l_153;
}


/* ------------------------------------------ */
/* 
 * reads : g_62.f3 g_70 g_71 g_65 g_62.f5 g_5 g_62.f0 g_62.f4 g_62.f1 g_62 g_120 g_121
 * writes: g_62 g_65 g_71
 */
static int32_t  func_52(uint16_t  p_53, int32_t  p_54, uint16_t  p_55, int8_t  p_56)
{ /* block id: 5 */
    struct S0 l_66 = {7UL,-1L,18446744073709551615UL,0x8AAAL,0x069FL,0xC42DACBDL};
    int32_t **l_73 = &g_71;
    int64_t l_82 = 0x889FC6894C8FF1DELL;
    int16_t l_83 = 1L;
    for (p_53 = 13; (p_53 == 39); ++p_53) {
      DCEMarker16_(); /* block id: 8 */
      struct S0 l_60 = {3UL, -5L, 1UL, 65534UL, 7L, 1UL};
      struct S0 *l_61[2];
      int32_t *l_63 = (void *)0;
      int32_t *l_64 = &g_65;
      int i;
      for (i = 0; i < 2; i++) {
        DCEMarker22_();
        l_61[i] = &l_60;
      }
      g_62[1][5][8] = l_60;
      (*l_64) = 0x7B419069L;
    }
    for (p_55 = 0; (p_55 <= 1); p_55 += 1) {
      DCEMarker17_(); /* block id: 14 */
      struct S0 *l_67 = &g_62[1][5][8];
      (*l_67) = l_66;
      return g_62[1][5][8].f3;
    }
    DCEMarker18_();
    if ((p_56 || 0x218137C7680494BALL)) {
      DCEMarker19_(); /* block id: 18 */
      struct S0 *l_69[8] = {&g_62[1][5][8], &g_62[1][5][8], &g_62[1][5][8],
                            &g_62[1][5][8], &g_62[1][5][8], &g_62[1][5][8],
                            &g_62[1][5][8], &g_62[1][5][8]};
      struct S0 **l_68 = &l_69[4];
      int32_t ***l_72[3][5] = {{&g_70, &g_70, &g_70, &g_70, &g_70},
                               {&g_70, &g_70, &g_70, &g_70, &g_70},
                               {&g_70, &g_70, &g_70, &g_70, &g_70}};
      int i, j;
      (*l_68) = &g_62[1][0][2];
      l_73 = g_70;
      for (l_66.f2 = 29; (l_66.f2 == 31);
           l_66.f2 = safe_add_func_uint32_t_u_u(l_66.f2, 2)) {
        DCEMarker23_(); /* block id: 23 */
        uint16_t l_84 = 65530UL;
        for (p_56 = 1; (p_56 >= 0); p_56 -= 1) {
          DCEMarker25_(); /* block id: 26 */
          return (**g_70);
        }
        DCEMarker26_();
        l_84 = ((p_55 ^
                 ((p_54 <= (p_55, (!g_62[1][5][8].f5))) || g_62[1][5][8].f3)),
                (safe_lshift_func_int8_t_s_s(
                    ((p_53 <= 0x25565FB1L) || 1UL),
                    (((((safe_unary_minus_func_int32_t_s(
                            ((((safe_add_func_uint32_t_u_u(
                                   (g_5[1] <= g_62[1][5][8].f0),
                                   g_62[1][5][8].f4)) < p_54) ||
                              0xDCD2L),
                             l_82))),
                        l_83) != 0x5237L) < 0x48B7478A259DFFE3LL) &&
                     p_55))));
        if ((((-9L) ^
              ((p_55 ||
                (safe_mod_func_uint16_t_u_u(
                    g_62[1][5][8].f1,
                    (g_62[1][5][8].f0 ||
                     ((g_62[0][0][7],
                       (safe_add_func_uint32_t_u_u(
                           (safe_lshift_func_uint16_t_u_u(
                               (safe_sub_func_uint64_t_u_u(
                                   0xBB4E8893110550B3LL,
                                   ((((-4L) ^
                                      ((safe_mod_func_int32_t_s_s(
                                           p_53, (((((g_5[1] ^ g_5[5]) ==
                                                     0xC547049EL) >
                                                    g_62[1][5][8].f3) &
                                                   g_62[1][5][8].f2),
                                                  (*g_71)))) ^
                                       1UL)) > l_84) ||
                                    p_53))),
                               5)),
                           (**g_70)))),
                      g_5[4]))))) != g_62[1][5][8].f1)) <= 0xB0L)) {
          DCEMarker27_(); /* block id: 30 */
          int32_t *l_95 = &g_65;
          int32_t *l_96[1][4];
          int i, j;
          for (i = 0; i < 1; i++) {
            DCEMarker30_();
            for (j = 0; j < 4; j++) {
              DCEMarker33_();
              l_96[i][j] = &g_65;
            }
          }
          for (l_84 = 0; (l_84 <= 1); l_84 += 1) {
            DCEMarker31_(); /* block id: 33 */
            int i, j;
            (*g_70) = (*g_70);
            if ((*g_71)) {
              DCEMarker34_();
              break;
            }
            return (**g_70);
          }
          DCEMarker32_();
          (*g_70) = l_95;
          l_96[0][3] = (*g_70);
          (**g_70) = (**l_73);
        } else {
          DCEMarker28_(); /* block id: 41 */
          (*g_71) = 0x39B79987L;
        }
        DCEMarker29_();
      }
      DCEMarker24_();
      (*l_68) = (void *)0;
    } else {
      DCEMarker20_(); /* block id: 46 */
      uint32_t l_119 = 0xCE170AE4L;
      int64_t l_151 = (-1L);
      if (p_56) {
        DCEMarker35_(); /* block id: 47 */
        int64_t l_104[4][4][8] = {
            {{0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)},
             {0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)},
             {0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)},
             {0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)}},
            {{0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)},
             {0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)},
             {0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)},
             {0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)}},
            {{0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)},
             {0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)},
             {0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)},
             {0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)}},
            {{0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)},
             {0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)},
             {0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)},
             {0xCF0388DE0F634178LL, 0x59E5E0E0025C80A1LL, 0x1AFC666AC72A8FA4LL,
              0x4DE583D3069C672CLL, 0xEC85A50DE016D721LL, (-4L), 4L, (-2L)}}};
        struct S0 *l_105 = &g_62[1][5][8];
        int32_t *l_131 = &g_65;
        int i, j, k;
        (*g_71) = (!(safe_add_func_int16_t_s_s(
            (safe_sub_func_int64_t_s_s(
                0xC541B5795B121062LL,
                ((((((void *)0 != (*g_70)) ||
                    (((1UL && (safe_lshift_func_uint8_t_u_s(
                                  ((l_104[1][0][3], ((0x62AB164AL ^ p_53),
                                                     l_105)) == &g_62[1][5][8]),
                                  6))) != 18446744073709551615UL) &
                     0UL)),
                   (void *)0) == (void *)0) ^
                 0x10L))),
            p_53)));
        for (l_83 = (-27); (l_83 == (-4)); ++l_83) {
          DCEMarker38_(); /* block id: 51 */
          int64_t l_129 = (-1L);
          struct S0 **l_138 = &l_105;
          (*l_73) =
              ((((((*g_70) ==
                   (((((safe_lshift_func_int8_t_s_s(
                           (safe_rshift_func_int16_t_s_s(
                               g_62[1][5][8].f1,
                               (safe_add_func_uint64_t_u_u(
                                   18446744073709551612UL, (!(**g_70)))))),
                           7)) &&
                       ((safe_lshift_func_uint8_t_u_u(
                            0x58L,
                            ((safe_lshift_func_uint16_t_u_u(
                                 (((**l_73) ^ (((p_56 < g_5[2]) &
                                                (g_5[4] ^ p_55)) > 0x9099L)),
                                  0UL),
                                 14)) &&
                             0xE47F6D24L))) > 0x38L)),
                      l_119) <= 5L),
                    (*g_70))) |
                  g_120),
                 g_121) == &l_105),
               (*g_70));
          (*g_71) =
              ((safe_sub_func_uint64_t_u_u(
                   (safe_mod_func_uint64_t_u_u(
                       ((g_62[1][5][8].f3 ==
                         (l_104[1][0][3],
                          (safe_mod_func_int32_t_s_s(
                              ((l_129 <= (!0x2EL)),
                               (((l_105 != &l_66) ^ (g_5[5], p_56)) && g_120)),
                              (*g_71))))) > g_62[1][5][8].f2),
                       18446744073709551615UL)),
                   p_56)),
               p_56);
          (*l_73) = l_131;
          (*l_131) =
              (0xC50A3A8EB31C7011LL |
               ((((((safe_rshift_func_uint16_t_u_u(
                        ((safe_mod_func_int32_t_s_s(
                             (*g_71), (safe_add_func_uint32_t_u_u(
                                          0UL, (l_138 == (void *)0))))) <
                         (safe_add_func_int32_t_s_s(
                             (safe_rshift_func_int8_t_s_u(
                                 (safe_lshift_func_int8_t_s_s(
                                     (l_129,
                                      (safe_lshift_func_uint8_t_u_s(
                                          (0x86F34C10L |
                                           ((*l_131) >
                                            ((((((((safe_lshift_func_int16_t_s_s(
                                                       0L, g_62[1][5][8].f2)) |
                                                   (**l_73)),
                                                  0xB475F570L) != p_55),
                                                0xC84FFCF1L),
                                               g_5[2]) > 0x862EL) &&
                                             1UL))),
                                          l_151))),
                                     4)),
                                 g_62[1][5][8].f2)),
                             g_62[1][5][8].f2))),
                        (*l_131))) < g_5[2]) <= g_62[1][5][8].f4) == 7UL) <=
                 g_62[1][5][8].f5),
                l_129));
        }
        return (**g_70);
      } else {
        DCEMarker36_(); /* block id: 58 */
        return p_54;
      }
      DCEMarker37_();
    }
    DCEMarker21_();
    (*g_70) = (void*)0;
    return p_54;
}




/* ---------------------------------------- */
int main (void)
{
    int i, j, k;
    int print_hash_value = 0;
    platform_main_begin();
    crc32_gentab();
    func_1();
    for (i = 0; i < 6; i++) {
      DCEMarker39_();
      transparent_crc(g_5[i], "g_5[i]", print_hash_value);
      if (print_hash_value) {
        DCEMarker41_();
        printf("index = [%d]\n", i);
      }
    }
    for (i = 0; i < 2; i++) {
      DCEMarker40_();
      for (j = 0; j < 6; j++) {
        DCEMarker42_();
        for (k = 0; k < 10; k++) {
          DCEMarker43_();
          transparent_crc(g_62[i][j][k].f0, "g_62[i][j][k].f0",
                          print_hash_value);
          transparent_crc(g_62[i][j][k].f1, "g_62[i][j][k].f1",
                          print_hash_value);
          transparent_crc(g_62[i][j][k].f2, "g_62[i][j][k].f2",
                          print_hash_value);
          transparent_crc(g_62[i][j][k].f3, "g_62[i][j][k].f3",
                          print_hash_value);
          transparent_crc(g_62[i][j][k].f4, "g_62[i][j][k].f4",
                          print_hash_value);
          transparent_crc(g_62[i][j][k].f5, "g_62[i][j][k].f5",
                          print_hash_value);
          if (print_hash_value) {
            DCEMarker44_();
            printf("index = [%d][%d][%d]\n", i, j, k);
          }
        }
      }
    }
    transparent_crc(g_65, "g_65", print_hash_value);
    transparent_crc(g_120, "g_120", print_hash_value);
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 1
breakdown:
   depth: 0, occurrence: 91
   depth: 1, occurrence: 17
XXX total union variables: 0

XXX max expression depth: 27
breakdown:
   depth: 1, occurrence: 70
   depth: 2, occurrence: 15
   depth: 3, occurrence: 2
   depth: 4, occurrence: 1
   depth: 7, occurrence: 1
   depth: 14, occurrence: 1
   depth: 16, occurrence: 2
   depth: 18, occurrence: 1
   depth: 19, occurrence: 1
   depth: 21, occurrence: 1
   depth: 22, occurrence: 1
   depth: 23, occurrence: 1
   depth: 27, occurrence: 1

XXX total number of pointers: 57

XXX times a variable address is taken: 241
XXX times a pointer is dereferenced on RHS: 50
breakdown:
   depth: 1, occurrence: 40
   depth: 2, occurrence: 10
XXX times a pointer is dereferenced on LHS: 46
breakdown:
   depth: 1, occurrence: 45
   depth: 2, occurrence: 1
XXX times a pointer is compared with null: 16
XXX times a pointer is compared with address of another variable: 5
XXX times a pointer is compared with another pointer: 3
XXX times a pointer is qualified to be dereferenced: 460

XXX max dereference level: 4
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 150
   level: 2, occurrence: 105
   level: 3, occurrence: 2
   level: 4, occurrence: 13
XXX number of pointers point to pointers: 26
XXX number of pointers point to scalars: 18
XXX number of pointers point to structs: 13
XXX percent of pointers has null in alias set: 29.8
XXX average alias set size: 1.39

XXX times a non-volatile is read: 559
XXX times a non-volatile is write: 140
XXX times a volatile is read: 0
XXX    times read thru a pointer: 0
XXX times a volatile is write: 0
XXX    times written thru a pointer: 0
XXX times a volatile is available for access: 0
XXX percentage of non-volatile access: 100

XXX forward jumps: 0
XXX backward jumps: 0

XXX stmts: 67
XXX max block depth: 4
breakdown:
   depth: 0, occurrence: 26
   depth: 1, occurrence: 19
   depth: 2, occurrence: 9
   depth: 3, occurrence: 10
   depth: 4, occurrence: 3

XXX percentage a fresh-made variable is used: 16.7
XXX percentage an existing variable is used: 83.3
********************* end of statistics **********************/


