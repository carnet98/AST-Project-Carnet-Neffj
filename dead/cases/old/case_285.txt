void DCEMarker0_(void);
void DCEMarker1_(void);
void DCEMarker2_(void);
void DCEMarker3_(void);
void DCEMarker4_(void);
void DCEMarker5_(void);
void DCEMarker6_(void);
void DCEMarker7_(void);
void DCEMarker8_(void);
void DCEMarker9_(void);
void DCEMarker10_(void);
void DCEMarker11_(void);
void DCEMarker12_(void);
void DCEMarker13_(void);
void DCEMarker14_(void);
void DCEMarker15_(void);
void DCEMarker16_(void);
void DCEMarker17_(void);
void DCEMarker18_(void);
void DCEMarker19_(void);
void DCEMarker20_(void);
void DCEMarker21_(void);
void DCEMarker22_(void);
void DCEMarker23_(void);
void DCEMarker24_(void);
void DCEMarker25_(void);
void DCEMarker26_(void);
void DCEMarker27_(void);
void DCEMarker28_(void);
void DCEMarker29_(void);
void DCEMarker30_(void);
void DCEMarker31_(void);
void DCEMarker32_(void);
void DCEMarker33_(void);
void DCEMarker34_(void);
void DCEMarker35_(void);
void DCEMarker36_(void);
void DCEMarker37_(void);
void DCEMarker38_(void);
void DCEMarker39_(void);
void DCEMarker40_(void);
void DCEMarker41_(void);
void DCEMarker42_(void);
void DCEMarker43_(void);
void DCEMarker44_(void);
void DCEMarker45_(void);
void DCEMarker46_(void);
void DCEMarker47_(void);
void DCEMarker48_(void);
void DCEMarker49_(void);
void DCEMarker50_(void);
void DCEMarker51_(void);
void DCEMarker52_(void);
void DCEMarker53_(void);
void DCEMarker54_(void);
void DCEMarker55_(void);
void DCEMarker56_(void);
void DCEMarker57_(void);
void DCEMarker58_(void);
void DCEMarker59_(void);
void DCEMarker60_(void);
void DCEMarker61_(void);
void DCEMarker62_(void);
void DCEMarker63_(void);
void DCEMarker64_(void);
void DCEMarker65_(void);
void DCEMarker66_(void);
void DCEMarker67_(void);
void DCEMarker68_(void);
void DCEMarker69_(void);
void DCEMarker70_(void);
void DCEMarker71_(void);
void DCEMarker72_(void);
void DCEMarker73_(void);
void DCEMarker74_(void);
void DCEMarker75_(void);
void DCEMarker76_(void);
void DCEMarker77_(void);
void DCEMarker78_(void);
/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   --no-unions --safe-math --no-argc --no-volatiles
 * --no-volatile-pointers --arrays --bitfields --checksum --no-comma-operators
 * --compound-assignment --consts --no-divs --no-embedded-assigns --jumps
 * --longlong --no-force-non-uniform-arrays --math64 --no-muls
 * --no-packed-struct --paranoid --pointers --structs --no-inline-function
 * --return-structs --no-arg-structs --dangling-global-pointers Seed: 3017933962
 */

#include "csmith.h"


static long __undefined;

/* --- Struct/Union Declarations --- */
/* --- GLOBAL VARIABLES --- */
static int8_t g_2[3][9][5] = {{{(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}}, {{(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}}, {{(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}, {(-3L), 0xCEL, 3L, 0L, 0L}}};
static int32_t g_4 = 0xD40A1650L;
static uint32_t g_5 = 1UL;
static int32_t g_10 = 0x095DBC2AL;
static int32_t *g_67 = &g_4;
static int32_t **g_66 = &g_67;
static int16_t g_173 = 0L;
static int32_t g_175 = (-8L);
static uint32_t g_176 = 1UL;
static uint8_t g_276 = 255UL;
static int32_t ***g_304[2] = {(void*)0, (void*)0};
static int32_t **** const g_303 = &g_304[1];
static int32_t ** const g_603 = &g_67;
static int32_t g_650[10][4][4] = {{{(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}}, {{(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}}, {{(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}}, {{(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}}, {{(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}}, {{(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}}, {{(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}}, {{(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}}, {{(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}}, {{(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}, {(-4L), 1L, 0x86675737L, 1L}}};
static const int32_t g_758 = 1L;
static int32_t **g_779[4][4] = {{&g_67, &g_67, &g_67, &g_67}, {&g_67, &g_67, &g_67, &g_67}, {&g_67, &g_67, &g_67, &g_67}, {&g_67, &g_67, &g_67, &g_67}};
static int32_t ****g_864 = (void*)0;
static int32_t g_969 = 0L;
static uint32_t g_970 = 4294967293UL;
static int64_t g_1118 = (-6L);
static int32_t *****g_1395 = &g_864;
static uint16_t g_1478 = 0UL;
static uint16_t g_1515 = 65530UL;
static const int32_t *g_1552 = &g_758;
static const int32_t **g_1551 = &g_1552;


/* --- FORWARD DECLARATIONS --- */
static int32_t  func_1(void);
static int8_t  func_15(const int32_t  p_16, int32_t * p_17, int32_t * p_18, int32_t * p_19);
static uint32_t  func_30(uint64_t  p_31);
static uint32_t  func_32(const int8_t  p_33, uint32_t  p_34, int32_t * p_35);
static int32_t * const  func_60(int32_t ** p_61, uint64_t  p_62, const int32_t ** p_63, int16_t  p_64, int32_t ** p_65);
static uint32_t  func_78(int32_t * const  p_79, int32_t  p_80);
static int32_t * const  func_81(uint8_t  p_82, int32_t * p_83, uint32_t  p_84);
static int32_t * func_90(int32_t ** p_91, int32_t ** p_92);
static int32_t ** func_93(int32_t * p_94, int32_t  p_95, int32_t ** p_96);
static int32_t * func_97(int32_t ** const  p_98, int32_t ** const  p_99, int64_t  p_100);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_2 g_5 g_10 g_4 g_603 g_67
 * writes: g_4 g_5 g_10 g_2
 */
static int32_t  func_1(void)
{ /* block id: 0 */
    int32_t *l_3[7];
    uint32_t l_1549 = 0UL;
    uint32_t l_1694 = 0x77DBAC15L;
    uint32_t l_1700 = 5UL;
    int i;
    for (i = 0; i < 7; i++) {
      DCEMarker0_();
      l_3[i] = &g_4;
    }
    g_4 = g_2[1][6][3];
    g_4 = 0xFD06BDE6L;
    g_5--;
    if (g_2[1][2][4]) {
      DCEMarker1_(); /* block id: 4 */
      int16_t l_11 = 0x78B1L;
      for (g_5 = 11; (g_5 > 45); g_5++) {
        DCEMarker4_(); /* block id: 7 */
        g_4 ^= g_10;
      }
      return l_11;
    } else {
      DCEMarker2_(); /* block id: 11 */
      int32_t l_12 = (-1L);
      int32_t *l_47 = &g_10;
      int32_t l_51 = 8L;
      if (l_12) {
        DCEMarker5_(); /* block id: 12 */
        int32_t l_41 = (-1L);
        int32_t **l_48 = &l_3[0];
        (*l_47) =
            (g_10 ||
             (((safe_lshift_func_int8_t_s_s(
                   func_15(
                       ((safe_mod_func_uint64_t_u_u(
                            (safe_lshift_func_int16_t_s_u(g_2[1][6][3], 12)),
                            ((&g_10 == l_3[4]) && g_2[1][6][3]))) <=
                        (safe_rshift_func_uint16_t_u_u(
                            (((safe_add_func_uint8_t_u_u(g_5, l_12)) !=
                              (safe_mod_func_int32_t_s_s(
                                  (-1L),
                                  func_30((
                                      func_32(
                                          (safe_rshift_func_int8_t_s_u(
                                              (safe_rshift_func_uint16_t_u_u(
                                                  (safe_unary_minus_func_int8_t_s(
                                                      ((void *)0 == l_3[5]))),
                                                  g_2[1][6][3])),
                                              1)),
                                          l_41, l_3[0]) == g_5))))) &
                             0xD6210110L),
                            2))),
                       l_3[0], &g_10, l_47),
                   g_5)) ^
               g_2[1][6][3]) |
              (*l_47)));
        (*l_48) = (void *)0;
        /* statement id: 28 */
        // assert (l_3[0] == 0 || l_3[0] == &g_4);
      } else {
        DCEMarker6_(); /* block id: 29 */
        uint8_t l_52 = 8UL;
        for (g_5 = 0; (g_5 < 5); g_5 = safe_add_func_int64_t_s_s(g_5, 1)) {
          DCEMarker8_(); /* block id: 32 */
          for (g_10 = 0; g_10 < 3; g_10 += 1) {
            DCEMarker9_();
            for (l_12 = 0; l_12 < 9; l_12 += 1) {
              DCEMarker10_();
              for (g_4 = 0; g_4 < 5; g_4 += 1) {
                DCEMarker11_();
                g_2[g_10][l_12][g_4] = 0x86L;
              }
            }
          }
        }
        l_52++;
      }
      /* facts after branching */
      // assert (l_3[0] == 0 || l_3[0] == &g_4);
      for (g_5 = 0; (g_5 <= 2); g_5 += 1) {
        DCEMarker7_(); /* block id: 39 */
        uint32_t l_57 = 0x39CA31B8L;
        const int32_t *l_73 = &g_10;
        const int32_t **l_72[4];
        uint32_t l_1545[4][9];
        uint64_t l_1550[9] = {0x718F070DB666B07DLL, 18446744073709551612UL,
                              0x718F070DB666B07DLL, 18446744073709551612UL,
                              0x718F070DB666B07DLL, 18446744073709551612UL,
                              0x718F070DB666B07DLL, 18446744073709551612UL,
                              0x718F070DB666B07DLL};
        int32_t **l_1553 = &l_3[6];
        uint8_t l_1687 = 255UL;
        int32_t l_1697[5];
        int i, j;
        for (i = 0; i < 4; i++) {
          DCEMarker12_();
          l_72[i] = &l_73;
        }
        for (i = 0; i < 4; i++) {
          DCEMarker13_();
          for (j = 0; j < 9; j++) {
            DCEMarker15_();
            l_1545[i][j] = 0x0912090BL;
          }
        }
        for (i = 0; i < 5; i++) {
          DCEMarker14_();
          l_1697[i] = (-6L);
        }
      }
    }
    DCEMarker3_();
    /* facts after branching */
    //assert (l_3[0] == 0 || l_3[0] == &g_4);
    return (**g_603);
}


/* ------------------------------------------ */
/* 
 * reads : g_10 g_4
 * writes: g_4
 */
static int8_t  func_15(const int32_t  p_16, int32_t * p_17, int32_t * p_18, int32_t * p_19)
{ /* block id: 24 */
    (*p_17) |= (*p_18);
    return p_16;
}


/* ------------------------------------------ */
/* 
 * reads : g_4
 * writes: g_4
 */
static uint32_t  func_30(uint64_t  p_31)
{ /* block id: 16 */
    int64_t l_46[9][4][7] = {{{0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}}, {{0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}}, {{0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}}, {{0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}}, {{0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}}, {{0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}}, {{0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}}, {{0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}}, {{0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}, {0L, 0L, 0x037144DB28543B57LL, 0xCE65120B879B6842LL, 0x3FE78DE61175C875LL, (-1L), 0x3FE78DE61175C875LL}}};
    int i, j, k;
    for (g_4 = 0; (g_4 < 5); g_4 = safe_add_func_uint16_t_u_u(g_4, 8)) {
      DCEMarker16_(); /* block id: 19 */
      if (p_31) {
        DCEMarker18_();
        break;
      }
        return l_46[3][2][6];
    }
    DCEMarker17_();
    return l_46[3][2][6];
}


/* ------------------------------------------ */
/* 
 * reads : g_4
 * writes:
 */
static uint32_t  func_32(const int8_t  p_33, uint32_t  p_34, int32_t * p_35)
{ /* block id: 13 */
    int32_t *l_43 = &g_4;
    int32_t **l_42[10];
    int i;
    for (i = 0; i < 10; i++) {
      DCEMarker19_();
      l_42[i] = &l_43;
    }
    p_35 = p_35;
    return (*l_43);
}


/* ------------------------------------------ */
/* 
 * reads : g_969 g_5 g_2 g_67 g_603 g_175 g_1478 g_10 g_1552 g_1551 g_970 g_1118 g_650 g_758 g_66 g_176
 * writes: g_1478 g_10 g_1552 g_970 g_67
 */
static int32_t * const  func_60(int32_t ** p_61, uint64_t  p_62, const int32_t ** p_63, int16_t  p_64, int32_t ** p_65)
{ /* block id: 731 */
    int64_t l_1559 = 0xDDE7C8D7A1E95D09LL;
    int32_t *** const *l_1563 = (void*)0;
    int32_t l_1601 = 1L;
    int32_t l_1604 = 0x4960E1F7L;
    int32_t l_1605 = 0xB6F2DD0BL;
    int32_t l_1606[1][5][3] = {{{0L, (-10L), 0x5CB45EA2L}, {0L, (-10L), 0x5CB45EA2L}, {0L, (-10L), 0x5CB45EA2L}, {0L, (-10L), 0x5CB45EA2L}, {0L, (-10L), 0x5CB45EA2L}}};
    uint32_t l_1641[7];
    int16_t l_1676 = (-7L);
    int64_t l_1677 = 5L;
    uint16_t l_1678 = 0xCE36L;
    int32_t * const l_1681 = &l_1604;
    int i, j, k;
    for (i = 0; i < 7; i++) {
      DCEMarker20_();
      l_1641[i] = 18446744073709551611UL;
    }
    if (((safe_mod_func_uint16_t_u_u(
             (0x43A097D00F1F27DBLL > 0xEF99AAA81B270C0BLL),
             (safe_unary_minus_func_uint64_t_u(
                 (safe_mod_func_int64_t_s_s(g_969, l_1559)))))) <=
         (safe_mod_func_uint32_t_u_u(
             (((~(l_1563 == (void *)0)) ||
               (safe_lshift_func_int16_t_s_u(
                   (safe_add_func_uint32_t_u_u(
                       (p_62 &
                        (safe_mod_func_int16_t_s_s(
                            (safe_add_func_uint8_t_u_u(
                                g_5, (safe_rshift_func_uint16_t_u_s(
                                         (((safe_rshift_func_uint8_t_u_s(
                                               ((void *)0 == p_61), 0)) ==
                                           0x33B91984L) >= 0x30E631FFL),
                                         4)))),
                            p_62))),
                       l_1559)),
                   10))) <= g_2[1][6][3]),
             4294967294UL)))) {
      DCEMarker21_(); /* block id: 732 */
      int32_t *l_1576 = &g_10;
      l_1576 = (*p_61);
      /* statement id: 733 */
      // assert (l_1576 == &g_4 || l_1576 == &l_51 || l_1576 == 0);
      return (*p_65);
      /* statement id: 734 */
      // assert (func_60_rv == 0 || func_60_rv == &g_4);
    } else {
      DCEMarker22_(); /* block id: 735 */
      int32_t *const l_1580[6] = {(void *)0, (void *)0, (void *)0,
                                  (void *)0, (void *)0, (void *)0};
      const int32_t ***l_1593 = (void *)0;
      const int32_t ****l_1592 = &l_1593;
      int32_t l_1603 = 0x41C3A515L;
      uint32_t l_1630 = 0UL;
      int i;
      if (((((safe_sub_func_uint16_t_u_u(
                 65531UL,
                 ((!0x7355L) ^ ((l_1580[2] != (*g_603)) | (~g_175))))) ||
             ((4294967288UL ^ 0xAACADB6FL) | 246UL)) < p_62) >= 0x48D5L)) {
        DCEMarker24_(); /* block id: 736 */
        int32_t ****l_1591 = &g_304[1];
        int32_t l_1600 = 1L;
        int32_t l_1602[1];
        uint8_t l_1607 = 0UL;
        int8_t l_1621[10][10] = {
            {0xD6L, 0x30L, (-3L), 0x46L, 2L, 0x46L, (-3L), 0x30L, 0xD6L, (-1L)},
            {0xD6L, 0x30L, (-3L), 0x46L, 2L, 0x46L, (-3L), 0x30L, 0xD6L, (-1L)},
            {0xD6L, 0x30L, (-3L), 0x46L, 2L, 0x46L, (-3L), 0x30L, 0xD6L, (-1L)},
            {0xD6L, 0x30L, (-3L), 0x46L, 2L, 0x46L, (-3L), 0x30L, 0xD6L, (-1L)},
            {0xD6L, 0x30L, (-3L), 0x46L, 2L, 0x46L, (-3L), 0x30L, 0xD6L, (-1L)},
            {0xD6L, 0x30L, (-3L), 0x46L, 2L, 0x46L, (-3L), 0x30L, 0xD6L, (-1L)},
            {0xD6L, 0x30L, (-3L), 0x46L, 2L, 0x46L, (-3L), 0x30L, 0xD6L, (-1L)},
            {0xD6L, 0x30L, (-3L), 0x46L, 2L, 0x46L, (-3L), 0x30L, 0xD6L, (-1L)},
            {0xD6L, 0x30L, (-3L), 0x46L, 2L, 0x46L, (-3L), 0x30L, 0xD6L, (-1L)},
            {0xD6L, 0x30L, (-3L), 0x46L, 2L, 0x46L, (-3L), 0x30L, 0xD6L,
             (-1L)}};
        const int32_t *l_1634[9][5][3] = {{{&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605}},
                                          {{&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605}},
                                          {{&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605}},
                                          {{&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605}},
                                          {{&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605}},
                                          {{&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605}},
                                          {{&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605}},
                                          {{&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605}},
                                          {{&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605},
                                           {&l_1602[0], &g_4, &l_1605}}};
        int i, j, k;
        for (i = 0; i < 1; i++) {
          DCEMarker27_();
          l_1602[i] = 6L;
        }
        for (g_1478 = 13; (g_1478 > 26); g_1478++) {
          DCEMarker28_(); /* block id: 739 */
          uint8_t l_1584 = 0x0BL;
          int32_t *const *l_1598 = &l_1580[0];
          int32_t *const **l_1597 = &l_1598;
          int32_t *const ***l_1596 = &l_1597;
          int32_t *const ***const *l_1595 = &l_1596;
          for (g_10 = 0; (g_10 <= 2); g_10 += 1) {
            DCEMarker31_(); /* block id: 742 */
            int32_t *l_1587 = &g_10;
            int32_t *****l_1594 = (void *)0;
            --l_1584;
            (*g_1551) = (*p_63);
            for (g_970 = 0; (g_970 <= 2); g_970 += 1) {
              DCEMarker32_(); /* block id: 747 */
              int32_t **l_1599 = &l_1587;
              (*l_1599) = (****l_1595);
              /* statement id: 748 */
              assert(l_1587 == 0);
            }
            /* facts after for loop */
            assert(l_1587 == 0 || l_1587 == &g_10);
          }
          (*p_61) = (***l_1596);
          /* statement id: 751 */
          assert(g_67 == 0);
          (*g_603) = (void *)0;
        }
        --l_1607;
        if ((l_1600 ==
             (safe_rshift_func_uint8_t_u_s(
                 ((safe_add_func_int32_t_s_s(
                      ((safe_rshift_func_int8_t_s_s(
                           p_62, (safe_lshift_func_uint16_t_u_s(
                                     4UL, g_1118)))) != (~0x13FBL)),
                      ((*p_63) == (*p_61)))) > (((void *)0 != &p_65) || p_64)),
                 g_650[5][3][2])))) {
          DCEMarker29_(); /* block id: 755 */
          int16_t l_1627[10][2] = {
              {(-1L), (-1L)}, {(-1L), (-1L)}, {(-1L), (-1L)}, {(-1L), (-1L)},
              {(-1L), (-1L)}, {(-1L), (-1L)}, {(-1L), (-1L)}, {(-1L), (-1L)},
              {(-1L), (-1L)}, {(-1L), (-1L)}};
          int32_t l_1628 = (-1L);
          int32_t l_1629 = 0x5C9F00CEL;
          int i, j;
          l_1628 = (safe_add_func_int32_t_s_s(
              (0xC7L <=
               ((((l_1621[9][7] ||
                   ((65535UL != ((-1L) < (**p_63))) ==
                    (safe_add_func_int32_t_s_s(
                        l_1604,
                        (safe_mod_func_uint32_t_u_u(
                            (~(l_1627[3][1] || (l_1621[0][5] == 0x0A78L))),
                            p_64)))))) > g_10) > 4294967287UL) |
                g_969)),
              l_1627[9][1]));
          if (g_1478) {
            DCEMarker33_();
            goto lbl_1633;
          }
        lbl_1633:
          l_1630--;
          l_1629 |= ((0x35L > l_1627[8][0]) == p_64);
          l_1628 ^= 0x679D8F8BL;
        } else {
          DCEMarker30_(); /* block id: 761 */
          int32_t l_1635[2][7];
          uint32_t l_1636[1];
          int32_t ***l_1643 = &g_66;
          int32_t **const *l_1659 = &g_779[2][2];
          int32_t **const **const l_1658 = &l_1659;
          int32_t **const **const *const l_1657 = &l_1658;
          int i, j;
          for (i = 0; i < 2; i++) {
            DCEMarker34_();
            for (j = 0; j < 7; j++) {
              DCEMarker37_();
              l_1635[i][j] = 9L;
            }
          }
          for (i = 0; i < 1; i++) {
            DCEMarker35_();
            l_1636[i] = 0x0E6FC57CL;
          }
          l_1634[4][2][0] = (*p_63);
          ++l_1636[0];
          for (l_1601 = 0; (l_1601 < (-16)); --l_1601) {
            DCEMarker36_(); /* block id: 766 */
            int32_t ***l_1642 = &g_779[3][0];
            int32_t l_1644 = 0x38D93420L;
            l_1641[3] = (-1L);
            l_1644 = (l_1642 == l_1643);
            if ((g_2[1][6][3] ^
                 ((0xD3263496EB6E3E2CLL <= ((*l_1592) == &p_63)) < 8L))) {
              DCEMarker38_(); /* block id: 769 */
              int32_t *l_1647 = &g_10;
              l_1644 ^= (-10L);
              l_1606[0][1][0] = (g_2[1][4][3] & (255UL == 1L));
              (*g_66) = func_97(p_61, p_65, p_64);
              (*l_1647) |=
                  (((safe_lshift_func_uint16_t_u_s(
                        (0x32AEB094L != ((void *)0 != l_1647)),
                        (safe_lshift_func_uint8_t_u_u(
                            (((safe_add_func_uint64_t_u_u(0x7BAD1EE977019AA3LL,
                                                          (~g_1478))) >
                              ((0UL == ((((safe_add_func_int64_t_s_s(
                                              ((((safe_sub_func_int16_t_s_s(
                                                     ((void *)0 != l_1657),
                                                     (((-9L) >= g_175) &&
                                                      g_1478))) == g_1118) |
                                                1L) == p_62),
                                              p_62)) |
                                          2UL) == g_970) ||
                                        5L)) <= g_2[0][7][4])) != p_64),
                            6)))) &
                    0xAD17L) >= (-1L));
            } else {
              DCEMarker39_(); /* block id: 774 */
              int8_t l_1675 = 1L;
              l_1675 |=
                  ((safe_rshift_func_uint16_t_u_u(
                       g_969,
                       (((((void *)0 == (*l_1592)) !=
                          (((safe_mod_func_int32_t_s_s(
                                ((safe_mod_func_uint32_t_u_u(
                                     ((((safe_rshift_func_int8_t_s_u(
                                            ((((safe_mod_func_uint64_t_u_u(
                                                   g_5,
                                                   ((((safe_rshift_func_uint16_t_u_u(
                                                          p_62, 7)) &
                                                      g_2[1][6][3]) <
                                                     (p_64 >= g_1118)) ||
                                                    (~0x37F13E87L)))) > p_64) <=
                                              g_176) &
                                             p_64),
                                            0)) ^
                                        (-1L)) >= 1UL) >= 0xBE00B06D4F35C08DLL),
                                     0xB4A351A7L)) >= g_650[6][0][0]),
                                (*g_1552))) > g_175) |
                           4UL)) ||
                         0xD7545C407A97BEB0LL) &
                        g_10))) ^
                   0xB464BD38L);
            }
          }
        }
        l_1676 &= 1L;
      } else {
        DCEMarker25_(); /* block id: 780 */
        return (*p_61);
        /* statement id: 781 */
        // assert (func_60_rv == &g_4 || func_60_rv == &l_51 || func_60_rv ==
        // 0);
      }
      DCEMarker26_();
      l_1678++;
    }
    DCEMarker23_();
    return (*p_61);
    /* statement id: 785 */
    //assert (func_60_rv == &g_4 || func_60_rv == &l_51 || func_60_rv == 0);
}


/* ------------------------------------------ */
/* 
 * reads : g_10
 * writes:
 */
static uint32_t  func_78(int32_t * const  p_79, int32_t  p_80)
{ /* block id: 728 */
    uint32_t l_1546 = 4294967295UL;
    l_1546++;
    return g_10;
}


/* ------------------------------------------ */
/* 
 * reads : g_67 g_4 g_970 g_173 g_10 g_603 g_650 g_758 g_66 g_969 g_175 g_303 g_1478 g_276 g_1118 g_1515 g_2 g_176
 * writes: g_67 g_10 g_969 g_304 g_1478 g_1515 g_1118 g_176 g_276
 */
static int32_t * const  func_81(uint8_t  p_82, int32_t * p_83, uint32_t  p_84)
{ /* block id: 50 */
    const uint32_t l_89[4] = {18446744073709551615UL, 0x2EBD359DL, 18446744073709551615UL, 0x2EBD359DL};
    int32_t **l_103 = &g_67;
    int8_t l_1306 = 0xC8L;
    int32_t ****l_1325 = &g_304[1];
    int32_t **l_1336 = &g_67;
    int32_t l_1340[4] = {0x4D706CACL, 0xABBB817BL, 0x4D706CACL, 0xABBB817BL};
    uint32_t l_1348 = 0x8C86CC0AL;
    uint32_t l_1438 = 0x9DF66F3EL;
    int32_t *l_1445[7][7][5] = {{{&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}}, {{&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}}, {{&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}}, {{&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}}, {{&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}}, {{&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}}, {{&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}, {&g_650[1][0][2], &l_1340[3], &g_650[1][0][2], &g_4, &g_650[4][2][1]}}};
    int i, j, k;
    if (((safe_sub_func_uint16_t_u_u(
             func_32(l_89[1], l_89[1],
                     func_90(func_93(func_97(&g_67, &g_67, p_84), p_84, l_103),
                             l_103)),
             (**l_103))) > l_1306)) {
      DCEMarker40_(); /* block id: 598 */
      int32_t **const l_1307 = &g_67;
      (*g_66) = func_97(
          l_1307,
          func_93(
              (*g_603),
              (p_82 >=
               ((safe_rshift_func_int16_t_s_u(
                    (safe_rshift_func_int8_t_s_s(
                        (p_82 < p_82),
                        (((void *)0 == l_103) ||
                         (g_10 < (+(safe_add_func_uint32_t_u_u(
                                     (+((((+(safe_rshift_func_int16_t_s_s(
                                              (safe_rshift_func_uint8_t_u_s(
                                                  (6UL && (**l_1307)), g_173)),
                                              13))) ||
                                          p_82) ||
                                         0x450BDD77L) ||
                                        (**l_103))),
                                     0x90296530L))))))),
                    11)) >= g_650[1][1][3])),
              l_103),
          g_758);
    } else {
      DCEMarker41_(); /* block id: 600 */
      uint8_t l_1332[8] = {9UL, 9UL, 0xFEL, 9UL, 9UL, 0xFEL, 9UL, 9UL};
      uint32_t l_1333 = 18446744073709551611UL;
      int32_t **l_1334 = &g_67;
      int32_t **l_1335 = (void *)0;
      int32_t l_1343 = 0x29AB8619L;
      int32_t l_1344 = (-1L);
      int32_t l_1345 = 1L;
      int32_t l_1346 = 0xD7306833L;
      uint8_t l_1351 = 0x77L;
      uint32_t l_1408[1];
      const int32_t *l_1418 = &g_10;
      int i;
      for (i = 0; i < 1; i++) {
        DCEMarker44_();
        l_1408[i] = 1UL;
      }
      p_83 = func_90(
          func_93(
              func_90(l_103, l_103),
              (safe_add_func_int64_t_s_s(
                  ((((*p_83) <=
                     (((safe_lshift_func_int16_t_s_s(
                           (**l_103),
                           ((8UL ==
                             (((void *)0 == l_1325) &
                              ((safe_sub_func_uint8_t_u_u(
                                   (safe_lshift_func_int8_t_s_s(
                                       (safe_lshift_func_uint8_t_u_u(
                                           (((&g_304[0] != (void *)0) || p_82) |
                                            (*p_83)),
                                           p_84)),
                                       l_1332[5])),
                                   p_82)) <= p_82))) ^
                            l_1333))) > 5UL) != l_1333)) <=
                    0xF4ABA11211F5EECFLL) <= p_82),
                  0xF31959A17B408C01LL)),
              l_1334),
          l_1335);
      /* statement id: 601 */
      assert(p_83 == &g_4);
      (*g_603) = func_90(l_1336, &p_83);
      (*g_603) = (void *)0;
      /* statement id: 603 */
      assert(g_67 == 0);
      for (g_10 = 15; (g_10 != (-18));
           g_10 = safe_sub_func_uint64_t_u_u(g_10, 3)) {
        DCEMarker45_(); /* block id: 606 */
        uint16_t l_1339 = 0xE47CL;
        int32_t l_1347[8] = {0L, 4L, 0L, 4L, 0L, 4L, 0L, 4L};
        int32_t **const l_1444 = (void *)0;
        int i;
      }
    }
    /* facts after branching */
    assert (g_67 == 0 || g_67 == &g_4);
    //assert (p_83 == &g_4 || p_83 == &l_51);
    for (g_969 = 1; (g_969 >= 0); g_969 -= 1) {
      DCEMarker42_(); /* block id: 662 */
      int16_t l_1446 = 7L;
      int32_t l_1467 = (-6L);
      int16_t l_1468[2];
      int32_t l_1474[4][3] = {{0x89EF736CL, 0L, 0x89EF736CL},
                              {0x89EF736CL, 0L, 0x89EF736CL},
                              {0x89EF736CL, 0L, 0x89EF736CL},
                              {0x89EF736CL, 0L, 0x89EF736CL}};
      int32_t **l_1494 = &l_1445[3][4][2];
      int8_t l_1537 = 0L;
      int i, j;
      for (i = 0; i < 2; i++) {
        DCEMarker46_();
        l_1468[i] = 0x086FL;
      }
      for (p_82 = 0; (p_82 <= 3); p_82 += 1) {
        DCEMarker47_(); /* block id: 665 */
        int32_t l_1469 = 0L;
        int32_t l_1472 = 0L;
        int32_t l_1511 = 0x201C2DC6L;
        int32_t l_1512 = 0xED718790L;
        int32_t l_1513 = (-1L);
        int32_t l_1514 = 0xC5D313F3L;
        int i, j;
        l_1446 &= 0xECF6B765L;
        for (l_1438 = 0; (l_1438 <= 1); l_1438 += 1) {
          DCEMarker52_(); /* block id: 669 */
          uint64_t l_1462 = 0x041E1983F825A781LL;
          int32_t ***l_1465 = &g_66;
          int32_t l_1466 = 0x77E85D76L;
          int32_t l_1473 = 0xFCBFC880L;
          int32_t l_1475 = (-1L);
          int32_t l_1477[6][1] = {{0x6DFA389EL}, {0x6DFA389EL}, {0x6DFA389EL},
                                  {0x6DFA389EL}, {0x6DFA389EL}, {0x6DFA389EL}};
          uint16_t l_1496 = 0xE8E1L;
          int i, j, k;
          for (l_1348 = 0; (l_1348 <= 3); l_1348 += 1) {
            DCEMarker53_(); /* block id: 672 */
            int i, j, k;
            if ((safe_add_func_uint16_t_u_u(
                    (safe_sub_func_uint32_t_u_u(
                        (safe_lshift_func_uint8_t_u_s(
                            (l_1340[l_1438] <=
                             (0xCCA3E1ACL !=
                              (5UL < g_650[l_1438][l_1348][(l_1438 + 1)]))),
                            (g_10 < g_175))),
                        (4294967295UL &
                         (safe_rshift_func_uint16_t_u_u(
                             (!((safe_sub_func_int32_t_s_s(
                                    (safe_add_func_int32_t_s_s(
                                        (safe_rshift_func_uint16_t_u_s(1UL,
                                                                       12)),
                                        (*p_83))),
                                    9L)) <= g_758)),
                             l_1462))))),
                    p_84))) {
              DCEMarker55_(); /* block id: 673 */
              int32_t l_1470 = 0x5B9A5726L;
              int32_t l_1471 = 0x0A8249C7L;
              int32_t l_1476 = 0x16187C44L;
              int i, j, k;
              l_1466 =
                  (safe_lshift_func_uint16_t_u_s((l_1465 == (void *)0), g_970));
              (*g_303) = (void *)0;
              g_1478++;
              l_1476 |= (safe_add_func_int16_t_s_s(
                  ((safe_lshift_func_uint16_t_u_s(
                       (((&p_83 == &p_83) ||
                         ((safe_rshift_func_uint16_t_u_s(
                              (0xB2L ||
                               ((safe_add_func_uint8_t_u_u(
                                    (((safe_lshift_func_uint8_t_u_u(
                                          1UL,
                                          ((safe_lshift_func_int16_t_s_s(
                                               (((safe_unary_minus_func_int16_t_s(
                                                     p_84)) < p_84) !=
                                                ((*l_1465) == l_1494)),
                                               4)) ^
                                           (safe_unary_minus_func_int16_t_s(
                                               g_4))))) >= g_970) > 0UL),
                                    p_84)) < g_969)),
                              g_276)) &&
                          p_84)) >= p_84),
                       9)) |
                   g_4),
                  l_1496));
            } else {
              DCEMarker56_(); /* block id: 678 */
              int32_t l_1497 = 0x536FEAA1L;
              int32_t **l_1498 =
                  &l_1445[(l_1438 + 2)][(l_1348 + 3)][(g_969 + 2)];
              l_1497 = (*p_83);
              if (l_1497) {
                DCEMarker57_();
                continue;
              }
              (*g_66) = p_83;
              /* statement id: 681 */
              // assert (g_67 == &g_4 || g_67 == &l_51);
            }
            (*l_1494) = p_83;
          }
          l_1469 ^= (safe_sub_func_uint16_t_u_u(
              l_1340[p_82],
              (safe_sub_func_uint16_t_u_u(
                  l_1340[p_82],
                  (((safe_mod_func_uint8_t_u_u(
                        (!p_84), (((~(safe_add_func_int64_t_s_s(
                                       ((safe_sub_func_int64_t_s_s(
                                            g_1118, g_758)) <= g_4),
                                       18446744073709551611UL))) >=
                                   (0x13782A991C06A228LL | 3UL)) &
                                  p_82))) != 0x1496ED53FEFE0B50LL) |
                   g_650[0][3][0])))));
          g_1515--;
          if ((*p_83)) {
            DCEMarker54_();
            continue;
          }
        }
      }
      for (g_1118 = 0; (g_1118 <= 1); g_1118 += 1) {
        DCEMarker48_(); /* block id: 692 */
        uint32_t l_1536 = 4294967295UL;
        int32_t *const l_1538 = &l_1340[(g_1118 + 1)];
        int i;
        l_1340[(g_1118 + 2)] = (~(safe_unary_minus_func_uint64_t_u(
            (((safe_sub_func_uint32_t_u_u(
                  (((safe_add_func_int32_t_s_s(l_1340[(g_1118 + 1)],
                                               (~l_1340[(g_1118 + 2)]))) &&
                    (0L !=
                     ((((safe_add_func_uint8_t_u_u(
                            (safe_add_func_uint32_t_u_u(
                                (+(((safe_add_func_int8_t_s_s(
                                        ((*p_83) ==
                                         (((safe_lshift_func_uint8_t_u_u(
                                               ((void *)0 == &p_83),
                                               (safe_rshift_func_int16_t_s_u(
                                                   0xA453L, 0)))) >= (-4L)) &
                                          (&p_83 != &p_83))),
                                        0UL)) > 65535UL) != 4294967295UL)),
                                l_1536)),
                            0xEEL)) > p_84) >= g_2[1][6][3]) == 0x519BL))) !=
                   0x56BAFE003CCC06E7LL),
                  (*p_83))) < 0xB05B3884EE602AB6LL) ||
             l_1537))));
        return (*g_66);
        /* statement id: 694 */
        // assert (func_81_rv == &g_4 || func_81_rv == &l_51 || func_81_rv ==
        // 0);
      }
      DCEMarker49_();
      for (g_176 = 0; (g_176 <= 1); g_176 += 1) {
        DCEMarker50_(); /* block id: 698 */
        int64_t l_1539 = 0x1CBF1F2F0F8D00C2LL;
        for (l_1537 = 3; (l_1537 >= 0); l_1537 -= 1) {
          DCEMarker58_(); /* block id: 701 */
          return (*l_103);
          /* statement id: 702 */
          // assert (func_81_rv == &g_4 || func_81_rv == &l_51 || func_81_rv ==
          // 0);
        }
        DCEMarker59_();
        for (p_84 = 0; (p_84 <= 3); p_84 += 1) {
          DCEMarker60_(); /* block id: 706 */
          int64_t l_1540[9][5] = {
              {0x78AF5FBE64DF2A6ELL, 0x83B86F93C57BAB26LL, 9L,
               0x83B86F93C57BAB26LL, 0x78AF5FBE64DF2A6ELL},
              {0x78AF5FBE64DF2A6ELL, 0x83B86F93C57BAB26LL, 9L,
               0x83B86F93C57BAB26LL, 0x78AF5FBE64DF2A6ELL},
              {0x78AF5FBE64DF2A6ELL, 0x83B86F93C57BAB26LL, 9L,
               0x83B86F93C57BAB26LL, 0x78AF5FBE64DF2A6ELL},
              {0x78AF5FBE64DF2A6ELL, 0x83B86F93C57BAB26LL, 9L,
               0x83B86F93C57BAB26LL, 0x78AF5FBE64DF2A6ELL},
              {0x78AF5FBE64DF2A6ELL, 0x83B86F93C57BAB26LL, 9L,
               0x83B86F93C57BAB26LL, 0x78AF5FBE64DF2A6ELL},
              {0x78AF5FBE64DF2A6ELL, 0x83B86F93C57BAB26LL, 9L,
               0x83B86F93C57BAB26LL, 0x78AF5FBE64DF2A6ELL},
              {0x78AF5FBE64DF2A6ELL, 0x83B86F93C57BAB26LL, 9L,
               0x83B86F93C57BAB26LL, 0x78AF5FBE64DF2A6ELL},
              {0x78AF5FBE64DF2A6ELL, 0x83B86F93C57BAB26LL, 9L,
               0x83B86F93C57BAB26LL, 0x78AF5FBE64DF2A6ELL},
              {0x78AF5FBE64DF2A6ELL, 0x83B86F93C57BAB26LL, 9L,
               0x83B86F93C57BAB26LL, 0x78AF5FBE64DF2A6ELL}};
          int i, j;
          for (g_276 = 0; (g_276 <= 1); g_276 += 1) {
            DCEMarker62_(); /* block id: 709 */
            uint64_t l_1541 = 0x048243B17A04FC20LL;
            int32_t l_1544 = (-1L);
            for (l_1446 = 3; (l_1446 >= 0); l_1446 -= 1) {
              DCEMarker64_(); /* block id: 712 */
              int i, j;
              l_1541--;
            }
            if (l_1540[4][4]) {
              DCEMarker65_();
              break;
            }
            for (l_1438 = 0; (l_1438 <= 3); l_1438 += 1) {
              DCEMarker66_(); /* block id: 718 */
              int i, j;
              (*g_303) = &g_779[(g_176 + 2)][p_84];
              /* statement id: 719 */
              // assert ((g_304[0] >= &g_779[0][0] && g_304[0] <= &g_779[3][3])
              // || g_304[0] == 0);
              l_1544 &= l_1474[l_1438][g_176];
              return p_83;
              /* statement id: 721 */
              // assert (func_81_rv == &g_4 || func_81_rv == &l_51);
            }
            DCEMarker67_();
          }
          DCEMarker63_();
        }
        DCEMarker61_();
      }
      DCEMarker51_();
    }
    DCEMarker43_();
    /* facts after for loop */
    //assert (g_67 == &g_4 || g_67 == &l_51 || g_67 == 0);
    //assert (l_1445[0][0][0] == &g_4 || l_1445[0][0][0] == &l_51 || (l_1445[0][0][0] >= &l_1340[0] && l_1445[0][0][0] <= &l_1340[3]) || l_1445[0][0][0] == &g_10 || (l_1445[0][0][0] >= &g_650[0][0][0] && l_1445[0][0][0] <= &g_650[9][3][3]) || l_1445[0][0][0] == 0);
    return p_83;
    /* statement id: 727 */
    //assert (func_81_rv == &g_4 || func_81_rv == &l_51);
}


/* ------------------------------------------ */
/* 
 * reads : g_67 g_4 g_970 g_173 g_10 g_603
 * writes:
 */
static int32_t * func_90(int32_t ** p_91, int32_t ** p_92)
{ /* block id: 595 */
    uint64_t l_1304 = 0x804FCE60AE9F9FD9LL;
    uint64_t l_1305 = 1UL;
    l_1305 |= ((((l_1304 >= l_1304) != (((-2L) > (l_1304 != (**p_91))) & g_970)) & (((((((l_1304 <= ((void*)0 == &p_92)) == l_1304) != g_173) && l_1304) ^ g_10) ^ 4294967287UL) | 1L)) >= 1L);
    return (*g_603);
    /* statement id: 597 */
    //assert (func_90_rv == &g_4);
}


/* ------------------------------------------ */
/* 
 * reads :
 * writes:
 */
static int32_t ** func_93(int32_t * p_94, int32_t  p_95, int32_t ** p_96)
{ /* block id: 54 */
    int8_t l_108 = 0x28L;
    int32_t l_140[8][7][3] = {{{0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}}, {{0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}}, {{0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}}, {{0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}}, {{0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}}, {{0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}}, {{0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}}, {{0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}, {0xCE0FBC7DL, 3L, 0x2265A2DFL}}};
    int32_t ** const l_141 = &g_67;
    int32_t l_142 = 0L;
    int32_t **l_219 = (void*)0;
    int32_t ***l_218 = &l_219;
    const int32_t ***l_263 = (void*)0;
    int32_t ****l_365 = &g_304[1];
    int32_t *****l_466[10] = {&l_365, &l_365, &l_365, &l_365, &l_365, &l_365, &l_365, &l_365, &l_365, &l_365};
    int32_t l_479 = 0xC196880FL;
    int8_t l_539 = 0x4EL;
    uint32_t l_565 = 0xA72890E9L;
    int32_t **l_592[5][5] = {{&g_67, &g_67, (void*)0, &g_67, &g_67}, {&g_67, &g_67, (void*)0, &g_67, &g_67}, {&g_67, &g_67, (void*)0, &g_67, &g_67}, {&g_67, &g_67, (void*)0, &g_67, &g_67}, {&g_67, &g_67, (void*)0, &g_67, &g_67}};
    int32_t **l_596[9][5][3] = {{{(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}}, {{(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}}, {{(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}}, {{(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}}, {{(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}}, {{(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}}, {{(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}}, {{(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}}, {{(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}, {(void*)0, &g_67, (void*)0}}};
    uint16_t l_610 = 0x1BF5L;
    int64_t l_649 = 0xBD5A3079AC1F5E18LL;
    int64_t l_652 = 1L;
    uint32_t l_654 = 0UL;
    int32_t **l_764 = &g_67;
    int32_t **l_765[6];
    int32_t **l_767[6] = {&g_67, &g_67, &g_67, &g_67, &g_67, &g_67};
    uint16_t l_886 = 0UL;
    int64_t l_968 = (-6L);
    int16_t l_1030 = 9L;
    int32_t **l_1045[9];
    int8_t l_1059 = 0L;
    int32_t **l_1128 = &g_67;
    int32_t l_1255 = 0x4E7E834DL;
    uint32_t l_1274 = 4294967286UL;
    int32_t l_1285 = 0x75864EA7L;
    int32_t l_1297[8];
    int32_t **l_1303 = &g_67;
    int i, j, k;
    for (i = 0; i < 6; i++) {
      DCEMarker68_();
      l_765[i] = &g_67;
    }
    for (i = 0; i < 9; i++) {
      DCEMarker69_();
      l_1045[i] = &g_67;
    }
    for (i = 0; i < 8; i++) {
      DCEMarker70_();
      l_1297[i] = (-1L);
    }
    return l_1303;
    /* statement id: 594 */
    //assert (func_93_rv == &g_67);
}


/* ------------------------------------------ */
/* 
 * reads : g_67
 * writes:
 */
static int32_t * func_97(int32_t ** const  p_98, int32_t ** const  p_99, int64_t  p_100)
{ /* block id: 51 */
    int16_t l_101 = 0x0BE9L;
    int32_t l_102[9][7] = {{1L, (-10L), (-10L), 1L, 0x50200630L, 0x802F2280L, 0x7C5320B3L}, {1L, (-10L), (-10L), 1L, 0x50200630L, 0x802F2280L, 0x7C5320B3L}, {1L, (-10L), (-10L), 1L, 0x50200630L, 0x802F2280L, 0x7C5320B3L}, {1L, (-10L), (-10L), 1L, 0x50200630L, 0x802F2280L, 0x7C5320B3L}, {1L, (-10L), (-10L), 1L, 0x50200630L, 0x802F2280L, 0x7C5320B3L}, {1L, (-10L), (-10L), 1L, 0x50200630L, 0x802F2280L, 0x7C5320B3L}, {1L, (-10L), (-10L), 1L, 0x50200630L, 0x802F2280L, 0x7C5320B3L}, {1L, (-10L), (-10L), 1L, 0x50200630L, 0x802F2280L, 0x7C5320B3L}, {1L, (-10L), (-10L), 1L, 0x50200630L, 0x802F2280L, 0x7C5320B3L}};
    int i, j;
    l_102[8][5] = l_101;
    return (*p_98);
    /* statement id: 53 */
    //assert (func_97_rv == &g_4 || func_97_rv == &l_142 || func_97_rv == &g_10 || func_97_rv == 0 || func_97_rv == &l_1346 || func_97_rv == &l_51);
}




/* ---------------------------------------- */
int main (void)
{
    int i, j, k;
    int print_hash_value = 0;
    platform_main_begin();
    crc32_gentab();
    func_1();
    for (i = 0; i < 3; i++) {
      DCEMarker71_();
      for (j = 0; j < 9; j++) {
        DCEMarker73_();
        for (k = 0; k < 5; k++) {
          DCEMarker74_();
          transparent_crc(g_2[i][j][k], "g_2[i][j][k]", print_hash_value);
          if (print_hash_value) {
            DCEMarker75_();
            printf("index = [%d][%d][%d]\n", i, j, k);
          }
        }
      }
    }
    transparent_crc(g_4, "g_4", print_hash_value);
    transparent_crc(g_5, "g_5", print_hash_value);
    transparent_crc(g_10, "g_10", print_hash_value);
    transparent_crc(g_173, "g_173", print_hash_value);
    transparent_crc(g_175, "g_175", print_hash_value);
    transparent_crc(g_176, "g_176", print_hash_value);
    transparent_crc(g_276, "g_276", print_hash_value);
    for (i = 0; i < 10; i++) {
      DCEMarker72_();
      for (j = 0; j < 4; j++) {
        DCEMarker76_();
        for (k = 0; k < 4; k++) {
          DCEMarker77_();
          transparent_crc(g_650[i][j][k], "g_650[i][j][k]", print_hash_value);
          if (print_hash_value) {
            DCEMarker78_();
            printf("index = [%d][%d][%d]\n", i, j, k);
          }
        }
      }
    }
    transparent_crc(g_758, "g_758", print_hash_value);
    transparent_crc(g_969, "g_969", print_hash_value);
    transparent_crc(g_970, "g_970", print_hash_value);
    transparent_crc(g_1118, "g_1118", print_hash_value);
    transparent_crc(g_1478, "g_1478", print_hash_value);
    transparent_crc(g_1515, "g_1515", print_hash_value);
    platform_main_end(crc32_context ^ 0xFFFFFFFFUL, print_hash_value);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 0
breakdown:
   depth: 0, occurrence: 499
XXX total union variables: 0

XXX non-zero bitfields defined in structs: 0
XXX zero bitfields defined in structs: 0
XXX const bitfields defined in structs: 0
XXX volatile bitfields defined in structs: 0
XXX structs with bitfields in the program: 0
breakdown:
XXX full-bitfields structs in the program: 0
breakdown:
XXX times a bitfields struct's address is taken: 0
XXX times a bitfields struct on LHS: 0
XXX times a bitfields struct on RHS: 0
XXX times a single bitfield on LHS: 0
XXX times a single bitfield on RHS: 0

XXX max expression depth: 27
breakdown:
   depth: 1, occurrence: 113
   depth: 2, occurrence: 21
   depth: 3, occurrence: 4
   depth: 4, occurrence: 1
   depth: 5, occurrence: 1
   depth: 10, occurrence: 1
   depth: 11, occurrence: 1
   depth: 12, occurrence: 1
   depth: 14, occurrence: 3
   depth: 16, occurrence: 1
   depth: 19, occurrence: 1
   depth: 20, occurrence: 1
   depth: 22, occurrence: 1
   depth: 23, occurrence: 2
   depth: 25, occurrence: 1
   depth: 26, occurrence: 1
   depth: 27, occurrence: 1

XXX total number of pointers: 243

XXX times a variable address is taken: 518
XXX times a pointer is dereferenced on RHS: 256
breakdown:
   depth: 1, occurrence: 146
   depth: 2, occurrence: 95
   depth: 3, occurrence: 13
   depth: 4, occurrence: 2
XXX times a pointer is dereferenced on LHS: 114
breakdown:
   depth: 1, occurrence: 104
   depth: 2, occurrence: 10
XXX times a pointer is compared with null: 65
XXX times a pointer is compared with address of another variable: 34
XXX times a pointer is compared with another pointer: 28
XXX times a pointer is qualified to be dereferenced: 8843

XXX max dereference level: 5
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 551
   level: 2, occurrence: 907
   level: 3, occurrence: 178
   level: 4, occurrence: 152
   level: 5, occurrence: 28
XXX number of pointers point to pointers: 177
XXX number of pointers point to scalars: 66
XXX number of pointers point to structs: 0
XXX percent of pointers has null in alias set: 28.8
XXX average alias set size: 1.35

XXX times a non-volatile is read: 1613
XXX times a non-volatile is write: 462
XXX times a volatile is read: 0
XXX    times read thru a pointer: 0
XXX times a volatile is write: 0
XXX    times written thru a pointer: 0
XXX times a volatile is available for access: 0
XXX percentage of non-volatile access: 100

XXX forward jumps: 4
XXX backward jumps: 9

XXX stmts: 103
XXX max block depth: 5
breakdown:
   depth: 0, occurrence: 23
   depth: 1, occurrence: 18
   depth: 2, occurrence: 16
   depth: 3, occurrence: 18
   depth: 4, occurrence: 11
   depth: 5, occurrence: 17

XXX percentage a fresh-made variable is used: 12.4
XXX percentage an existing variable is used: 87.6
********************* end of statistics **********************/


