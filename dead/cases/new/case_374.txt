void DCEMarker0_(void);
void DCEMarker1_(void);
void DCEMarker2_(void);
void DCEMarker3_(void);
void DCEMarker4_(void);
void DCEMarker5_(void);
/*
 * This is a RANDOMLY GENERATED PROGRAM.
 *
 * Generator: csmith 2.3.0
 * Git version: 30dccd7
 * Options:   --no-unions --safe-math --no-argc --no-volatiles
 * --no-volatile-pointers --arrays --bitfields --no-checksum
 * --no-comma-operators --compound-assignment --consts --divs
 * --no-embedded-assigns --no-jumps --no-longlong --no-force-non-uniform-arrays
 * --math64 --muls --no-packed-struct --paranoid --pointers --no-structs
 * --inline-function --no-return-structs --no-arg-structs
 * --dangling-global-pointers Seed:      558157191
 */

#define NO_LONGLONG

#include "csmith.h"

static volatile uint32_t csmith_sink_ = 0;

static long __undefined;

/* --- Struct/Union Declarations --- */

/* --- LOCAL VARIABLE DECLARATIONS --- */
int l_36;
int i;
int k;
int l_39;
int j;
/* --- GLOBAL VARIABLES --- */
static const int8_t g_9 = 0x58;
static int32_t g_35[7][10] = {{0xBED562B9, 0x22C92085, 0x22C92085, 0xBED562B9, 0, (-1), 8, 1, 0x7D2A7E9F, 1}, {0xBED562B9, 0x22C92085, 0x22C92085, 0xBED562B9, 0, (-1), 8, 1, 0x7D2A7E9F, 1}, {0xBED562B9, 0x22C92085, 0x22C92085, 0xBED562B9, 0, (-1), 8, 1, 0x7D2A7E9F, 1}, {0xBED562B9, 0x22C92085, 0x22C92085, 0xBED562B9, 0, (-1), 8, 1, 0x7D2A7E9F, 1}, {0xBED562B9, 0x22C92085, 0x22C92085, 0xBED562B9, 0, (-1), 8, 1, 0x7D2A7E9F, 1}, {0xBED562B9, 0x22C92085, 0x22C92085, 0xBED562B9, 0, (-1), 8, 1, 0x7D2A7E9F, 1}, {0xBED562B9, 0x22C92085, 0x22C92085, 0xBED562B9, 0, (-1), 8, 1, 0x7D2A7E9F, 1}};
static const int16_t g_43 = 1;


/* --- FORWARD DECLARATIONS --- */
inline static uint8_t  func_1(void);
inline static const int8_t  func_22(int32_t  p_23, const uint16_t  p_24, uint32_t  p_25, uint32_t  p_26, int16_t  p_27);
inline static const int8_t  func_30(uint32_t  p_31, uint8_t  p_32, uint8_t  p_33);


/* --- FUNCTIONS --- */
/* ------------------------------------------ */
/* 
 * reads : g_9 g_43
 * writes: g_35
 */
inline static uint8_t  func_1(void)
{ /* block id: 0 */
    uint32_t l_6 = 0x00D4E793;
    int32_t l_34 = 1;
    g_35[5][7] = (safe_lshift_func_int16_t_s_u((safe_div_func_int16_t_s_s(l_6, (safe_add_func_int8_t_s_s(((g_9 >= (safe_rshift_func_uint16_t_u_u((!(safe_mul_func_uint16_t_u_u(((-10) != g_9), l_6))), (safe_lshift_func_uint8_t_u_s((safe_mod_func_int32_t_s_s(((safe_div_func_uint32_t_u_u((g_9 >= (~func_22(g_9, l_6, (safe_lshift_func_int8_t_s_s(func_30(l_34, l_6, l_34), l_34)), g_9, l_34))), g_9)) ^ g_9), g_43)), 6))))) >= g_9), 0x30)))), 1));
    return l_34;
}


/* ------------------------------------------ */
/* 
 * reads : g_9
 * writes:
 */
inline static const int8_t  func_22(int32_t  p_23, const uint16_t  p_24, uint32_t  p_25, uint32_t  p_26, int16_t  p_27)
{ /* block id: 14 */
    return g_9;
}


/* ------------------------------------------ */
/* 
 * reads : g_9
 * writes: g_35
 */
inline static const int8_t  func_30(uint32_t  p_31, uint8_t  p_32, uint8_t  p_33)
{ /* block id: 1 */
  for (p_32 = 0; (p_32 <= 6); p_32 += 1) {
    if (5209102125585674944 == l_36){DCEMarker0_();} /* block id: 4 */
    int32_t *l_36 = &g_35[0][9];
    int32_t l_39[9][7][4] = {{{0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)}},
                             {{0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)}},
                             {{0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)}},
                             {{0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)}},
                             {{0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)}},
                             {{0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)}},
                             {{0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)}},
                             {{0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)}},
                             {{0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)},
                              {0xA5798870, 0xA5798870, (-1), (-8)}}};
    int i, j, k;
    if (g_9) {
      DCEMarker1_();
      break;
    }
    (*l_36) = p_33;
    for (p_31 = 0; (p_31 <= 6); p_31 += 1) {
      DCEMarker2_(); /* block id: 9 */
      int32_t l_37[7];
      int32_t *l_38[6][9][3] = {{{(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]}},
                                {{(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]}},
                                {{(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]}},
                                {{(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]}},
                                {{(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]}},
                                {{(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]},
                                 {(void *)0, (void *)0, &g_35[3][8]}}};
      uint16_t l_40 = 65535U;
      int i, j, k;
      for (i = 0; i < 7; i++) {
        DCEMarker3_();
        l_37[i] = 8;
      }
      ++l_40;
    }
  }
    return p_31;
}




/* ---------------------------------------- */
int main (void)
{
    int i, j;
    int print_hash_value = 0;
    platform_main_begin();
    func_1();
    csmith_sink_ = g_9;
    for (i = 0; i < 7; i++) {
      DCEMarker4_();
      for (j = 0; j < 10; j++) {
        DCEMarker5_();
        csmith_sink_ = g_35[i][j];
      }
    }
    csmith_sink_ = g_43;
    platform_main_end(0,0);
    return 0;
}

/************************ statistics *************************
XXX max struct depth: 0
breakdown:
   depth: 0, occurrence: 7
XXX total union variables: 0

XXX non-zero bitfields defined in structs: 0
XXX zero bitfields defined in structs: 0
XXX const bitfields defined in structs: 0
XXX volatile bitfields defined in structs: 0
XXX structs with bitfields in the program: 0
breakdown:
XXX full-bitfields structs in the program: 0
breakdown:
XXX times a bitfields struct's address is taken: 0
XXX times a bitfields struct on LHS: 0
XXX times a bitfields struct on RHS: 0
XXX times a single bitfield on LHS: 0
XXX times a single bitfield on RHS: 0

XXX max expression depth: 23
breakdown:
   depth: 1, occurrence: 9
   depth: 2, occurrence: 2
   depth: 23, occurrence: 1

XXX total number of pointers: 2

XXX times a variable address is taken: 52
XXX times a pointer is dereferenced on RHS: 0
breakdown:
XXX times a pointer is dereferenced on LHS: 1
breakdown:
   depth: 1, occurrence: 1
XXX times a pointer is compared with null: 0
XXX times a pointer is compared with address of another variable: 0
XXX times a pointer is compared with another pointer: 0
XXX times a pointer is qualified to be dereferenced: 116

XXX max dereference level: 1
breakdown:
   level: 0, occurrence: 0
   level: 1, occurrence: 1
XXX number of pointers point to pointers: 0
XXX number of pointers point to scalars: 2
XXX number of pointers point to structs: 0
XXX percent of pointers has null in alias set: 50
XXX average alias set size: 2

XXX times a non-volatile is read: 24
XXX times a non-volatile is write: 6
XXX times a volatile is read: 0
XXX    times read thru a pointer: 0
XXX times a volatile is write: 0
XXX    times written thru a pointer: 0
XXX times a volatile is available for access: 0
XXX percentage of non-volatile access: 100

XXX forward jumps: 0
XXX backward jumps: 0

XXX stmts: 9
XXX max block depth: 2
breakdown:
   depth: 0, occurrence: 5
   depth: 1, occurrence: 3
   depth: 2, occurrence: 1

XXX percentage a fresh-made variable is used: 16.3
XXX percentage an existing variable is used: 83.7
********************* end of statistics **********************/


